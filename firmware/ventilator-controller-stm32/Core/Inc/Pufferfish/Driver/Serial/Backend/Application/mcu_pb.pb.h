/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.1 */

#ifndef PB_MCU_PB_PB_H_INCLUDED
#define PB_MCU_PB_PB_H_INCLUDED
#include "nanopb/pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _SpontaneousSupport {
    SpontaneousSupport_ac = 0,
    SpontaneousSupport_simv = 1
} SpontaneousSupport;

typedef enum _VentilationCycling {
    VentilationCycling_pc = 0,
    VentilationCycling_vc = 1,
    VentilationCycling_psv = 2
} VentilationCycling;

/* Struct definitions */
typedef struct _Alarms {
    uint32_t time;
    bool alarm_one;
    bool alarm_two;
} Alarms;

typedef PB_BYTES_ARRAY_T(64) Announcement_announcement_t;
typedef struct _Announcement {
    uint32_t time;
    Announcement_announcement_t announcement;
} Announcement;

typedef struct _CycleMeasurements {
    uint32_t time;
    float vt;
    float rr;
    float peep;
    float pip;
    float ip;
    float ve;
} CycleMeasurements;

typedef struct _Ping {
    uint32_t time;
    uint32_t id;
} Ping;

typedef struct _SensorMeasurements {
    uint32_t time;
    float paw;
    float flow;
    float volume;
    float fio2;
} SensorMeasurements;

typedef struct _VentilationMode {
    SpontaneousSupport support;
    VentilationCycling cycling;
} VentilationMode;

typedef struct _Parameters {
    uint32_t time;
    bool has_mode;
    VentilationMode mode;
    float pip;
    float peep;
    float vt;
    float rr;
    float ie;
    float fio2;
} Parameters;

typedef struct _ParametersRequest {
    uint32_t time;
    bool has_mode;
    VentilationMode mode;
    float pip;
    float peep;
    float vt;
    float rr;
    float ie;
    float fio2;
} ParametersRequest;


/* Helper constants for enums */
#define _SpontaneousSupport_MIN SpontaneousSupport_ac
#define _SpontaneousSupport_MAX SpontaneousSupport_simv
#define _SpontaneousSupport_ARRAYSIZE ((SpontaneousSupport)(SpontaneousSupport_simv+1))

#define _VentilationCycling_MIN VentilationCycling_pc
#define _VentilationCycling_MAX VentilationCycling_psv
#define _VentilationCycling_ARRAYSIZE ((VentilationCycling)(VentilationCycling_psv+1))


/* Initializer values for message structs */
#define Alarms_init_default                      {0, 0, 0}
#define SensorMeasurements_init_default          {0, 0, 0, 0, 0}
#define CycleMeasurements_init_default           {0, 0, 0, 0, 0, 0, 0}
#define VentilationMode_init_default             {_SpontaneousSupport_MIN, _VentilationCycling_MIN}
#define Parameters_init_default                  {0, false, VentilationMode_init_default, 0, 0, 0, 0, 0, 0}
#define ParametersRequest_init_default           {0, false, VentilationMode_init_default, 0, 0, 0, 0, 0, 0}
#define Ping_init_default                        {0, 0}
#define Announcement_init_default                {0, {0, {0}}}
#define Alarms_init_zero                         {0, 0, 0}
#define SensorMeasurements_init_zero             {0, 0, 0, 0, 0}
#define CycleMeasurements_init_zero              {0, 0, 0, 0, 0, 0, 0}
#define VentilationMode_init_zero                {_SpontaneousSupport_MIN, _VentilationCycling_MIN}
#define Parameters_init_zero                     {0, false, VentilationMode_init_zero, 0, 0, 0, 0, 0, 0}
#define ParametersRequest_init_zero              {0, false, VentilationMode_init_zero, 0, 0, 0, 0, 0, 0}
#define Ping_init_zero                           {0, 0}
#define Announcement_init_zero                   {0, {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define Alarms_time_tag                          1
#define Alarms_alarm_one_tag                     2
#define Alarms_alarm_two_tag                     3
#define Announcement_time_tag                    1
#define Announcement_announcement_tag            2
#define CycleMeasurements_time_tag               1
#define CycleMeasurements_vt_tag                 2
#define CycleMeasurements_rr_tag                 3
#define CycleMeasurements_peep_tag               4
#define CycleMeasurements_pip_tag                5
#define CycleMeasurements_ip_tag                 6
#define CycleMeasurements_ve_tag                 7
#define Ping_time_tag                            1
#define Ping_id_tag                              2
#define SensorMeasurements_time_tag              1
#define SensorMeasurements_paw_tag               2
#define SensorMeasurements_flow_tag              3
#define SensorMeasurements_volume_tag            4
#define SensorMeasurements_fio2_tag              5
#define VentilationMode_support_tag              1
#define VentilationMode_cycling_tag              2
#define Parameters_time_tag                      1
#define Parameters_mode_tag                      2
#define Parameters_pip_tag                       3
#define Parameters_peep_tag                      4
#define Parameters_vt_tag                        5
#define Parameters_rr_tag                        6
#define Parameters_ie_tag                        7
#define Parameters_fio2_tag                      8
#define ParametersRequest_time_tag               1
#define ParametersRequest_mode_tag               2
#define ParametersRequest_pip_tag                3
#define ParametersRequest_peep_tag               4
#define ParametersRequest_vt_tag                 5
#define ParametersRequest_rr_tag                 6
#define ParametersRequest_ie_tag                 7
#define ParametersRequest_fio2_tag               8

/* Struct field encoding specification for nanopb */
#define Alarms_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   time,              1) \
X(a, STATIC,   SINGULAR, BOOL,     alarm_one,         2) \
X(a, STATIC,   SINGULAR, BOOL,     alarm_two,         3)
#define Alarms_CALLBACK NULL
#define Alarms_DEFAULT NULL

#define SensorMeasurements_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   time,              1) \
X(a, STATIC,   SINGULAR, FLOAT,    paw,               2) \
X(a, STATIC,   SINGULAR, FLOAT,    flow,              3) \
X(a, STATIC,   SINGULAR, FLOAT,    volume,            4) \
X(a, STATIC,   SINGULAR, FLOAT,    fio2,              5)
#define SensorMeasurements_CALLBACK NULL
#define SensorMeasurements_DEFAULT NULL

#define CycleMeasurements_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   time,              1) \
X(a, STATIC,   SINGULAR, FLOAT,    vt,                2) \
X(a, STATIC,   SINGULAR, FLOAT,    rr,                3) \
X(a, STATIC,   SINGULAR, FLOAT,    peep,              4) \
X(a, STATIC,   SINGULAR, FLOAT,    pip,               5) \
X(a, STATIC,   SINGULAR, FLOAT,    ip,                6) \
X(a, STATIC,   SINGULAR, FLOAT,    ve,                7)
#define CycleMeasurements_CALLBACK NULL
#define CycleMeasurements_DEFAULT NULL

#define VentilationMode_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    support,           1) \
X(a, STATIC,   SINGULAR, UENUM,    cycling,           2)
#define VentilationMode_CALLBACK NULL
#define VentilationMode_DEFAULT NULL

#define Parameters_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   time,              1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  mode,              2) \
X(a, STATIC,   SINGULAR, FLOAT,    pip,               3) \
X(a, STATIC,   SINGULAR, FLOAT,    peep,              4) \
X(a, STATIC,   SINGULAR, FLOAT,    vt,                5) \
X(a, STATIC,   SINGULAR, FLOAT,    rr,                6) \
X(a, STATIC,   SINGULAR, FLOAT,    ie,                7) \
X(a, STATIC,   SINGULAR, FLOAT,    fio2,              8)
#define Parameters_CALLBACK NULL
#define Parameters_DEFAULT NULL
#define Parameters_mode_MSGTYPE VentilationMode

#define ParametersRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   time,              1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  mode,              2) \
X(a, STATIC,   SINGULAR, FLOAT,    pip,               3) \
X(a, STATIC,   SINGULAR, FLOAT,    peep,              4) \
X(a, STATIC,   SINGULAR, FLOAT,    vt,                5) \
X(a, STATIC,   SINGULAR, FLOAT,    rr,                6) \
X(a, STATIC,   SINGULAR, FLOAT,    ie,                7) \
X(a, STATIC,   SINGULAR, FLOAT,    fio2,              8)
#define ParametersRequest_CALLBACK NULL
#define ParametersRequest_DEFAULT NULL
#define ParametersRequest_mode_MSGTYPE VentilationMode

#define Ping_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   time,              1) \
X(a, STATIC,   SINGULAR, UINT32,   id,                2)
#define Ping_CALLBACK NULL
#define Ping_DEFAULT NULL

#define Announcement_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   time,              1) \
X(a, STATIC,   SINGULAR, BYTES,    announcement,      2)
#define Announcement_CALLBACK NULL
#define Announcement_DEFAULT NULL

extern const pb_msgdesc_t Alarms_msg;
extern const pb_msgdesc_t SensorMeasurements_msg;
extern const pb_msgdesc_t CycleMeasurements_msg;
extern const pb_msgdesc_t VentilationMode_msg;
extern const pb_msgdesc_t Parameters_msg;
extern const pb_msgdesc_t ParametersRequest_msg;
extern const pb_msgdesc_t Ping_msg;
extern const pb_msgdesc_t Announcement_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Alarms_fields &Alarms_msg
#define SensorMeasurements_fields &SensorMeasurements_msg
#define CycleMeasurements_fields &CycleMeasurements_msg
#define VentilationMode_fields &VentilationMode_msg
#define Parameters_fields &Parameters_msg
#define ParametersRequest_fields &ParametersRequest_msg
#define Ping_fields &Ping_msg
#define Announcement_fields &Announcement_msg

/* Maximum encoded size of messages (where known) */
#define Alarms_size                              10
#define SensorMeasurements_size                  26
#define CycleMeasurements_size                   36
#define VentilationMode_size                     4
#define Parameters_size                          42
#define ParametersRequest_size                   42
#define Ping_size                                12
#define Announcement_size                        72

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
