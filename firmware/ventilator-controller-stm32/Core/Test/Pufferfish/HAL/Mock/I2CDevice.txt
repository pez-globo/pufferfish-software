Scenario : I2C mock device works correctly for add_read and read method 
  GIVEN('Freshly constructed mock device') 
    WHEN('The add_read method is called with input parameters [a0 e8 d4 fd 97]bytes, and ok '
        'I2CDeviceStatus and count is initialized to 50 and then read method is called with input parameter count initialized to 50, ') 
      THEN('The read method returns OK status') 
      THEN('After the read method call, output buffer contains [a0 e8 d4 fd 97] bytes') 

    WHEN('The add_read method is called with input parameters [a0 e8 d4 fd 97] bytes, and '
        'read_error I2CDeviceStatus, and count is initialized to 50 and then read method is called with input parameter count initialized to 50') 
      THEN('The read method returns read_error status') 
      THEN('After the read method call, output buffer contains [a0 e8 d4 fd 97] bytes') 

    WHEN('The add_read method is called with input parameters [a0 e8 d4 fd 97]bytes, and '
        'crc_check_failed I2CDeviceStatus and count is initialized to 50 and then read method is called with input parameter count initialized to 50') 
      THEN('The read method returns crc_check_failed status') 
      THEN('After the read method call, output buffer contains [a0 e8 d4 fd 97] bytes') 

    WHEN('The add_read method is called with input parameters [a0 e8 d4 fd 97]bytes, and '
        'test_failed I2CDeviceStatus, and count is initialized to 50 and then read method is called with input parameter count initialized to 50') 
      THEN('The read method returns test_failed status') 
      THEN('After the read method call , output buffer contains[a0 e8 d4 fd 97] bytes') 

Scenario : Mock I2CDevice works correctly when add_read method is called multiple times and then read method is called multiple times 
  GIVEN('Freshly constructed mock device') 
    WHEN('The add_read method is called five times with input parametes,[27 b8] [64 f3] [e1 7c] [d5 '
        '55] [2e 87] bytes and [ok][read_error][invalid_arguments][crc_check_failed][no_new_data] '
        'I2CDeviceStatus and count is initialized to 50, then read method is called six times with input parameter count initialized to 50') 
      THEN('The first read method call returns Ok status') 
      THEN('After the first read method call, output buffer contains [27 b8]bytes') 
      THEN('The second read method call returns read_error status') 
      THEN('After the second read method call, output buffer contains [64 f3]bytes') 
      THEN('The third read method call returns invalid_argument status') 
      THEN('After the third read method call, output buffer contains [e1 7c]bytes') 
      THEN('The fourth read method call returns crc_check_failed status') 
      THEN('After the fourth read method call, output buffer contains [d5 55]bytes') 
      THEN('The fifth read method call returns test_failed status') 
      THEN('After the fifth read method call, output buffer contains [2e 87]bytes') 
      THEN('The sixth read method call returns no_new_data status') 

    WHEN('The add_read method is called four times with input parametes,[27 b8] [64 f3] [e1 7c] [d5 '
        '55] bytes and [ok][read_error][invalid_arguments][ok] I2CDeviceStatus and count is initialized to 50, then read method is called four times with input parameter count set to 50') 
      THEN('The first read method call returns Ok status') 
      THEN('After the first read method call, output buffer contains [27 b8]bytes') 
      THEN('The second read method call returns read_error status') 
      THEN('After the second read method call, output buffer contains [64 f3]bytes') 
      THEN('The third read method call returns invalid_argument status') 
      THEN('After the third read method call, output buffer contains [e1 7c]bytes') 
      THEN('The fourth read method call returns ok status') 
      THEN('After the fourth read method call, output buffer contains [d5 55]bytes') 

    WHEN('The add_read method is called three times with input parametes,[27 b8] [64 f3] [e1 7c] '
        'bytes and [ok][ok][ok] I2CDeviceStatus and count is initialized to 50, then read method is called three times with input parameter count initialized to 50') 
      THEN('The first read method call returns Ok status') 
      THEN('After the first read method call, output buffer contains [27 b8]bytes') 
      THEN('The second read method call returns ok status') 
      THEN('After the second read method call, output buffer contains [64 f3]bytes') 
      THEN('The third read method call returns ok status') 
      THEN('After the third read method call, output buffer contains [e1 7c]bytes') 

Scenario : Mock I2CDevice works correctly when add_read method and read method is called alternately 
  GIVEN('Freshly constructed mock device') 
    WHEN('The add_read method  with input parametes,[27 b8] and I2CDeviceStatus [ok] and count is initialized to 50 ,is called and '
        'then read method is called , add_read and read method is called alternatively for 6 more times with input parameter [64 f3] [2f 1c] '
        '[39 25] [f3 9e] [a9 78] [9c 7f] and [ok][ok][ok][ok][ok][ok] I2CDeviceStatus ') 
      THEN('The first read method call returns Ok status') 
      THEN('After the first read method call, output buffer contains [27 b8]bytes') 
      THEN('The second read method call returns ok status') 
      THEN('After the second read method call, output buffer contains [64 f3]bytes') 
      THEN('The third read method call returns Ok status') 
      THEN('After the third read method call, output buffer contains [2f 1c]bytes') 
      THEN('The fourth read method call returns Ok status') 
      THEN('After the fourth read method call, output buffer contains [39 25]bytes') 
      THEN('The fifth read method call returns Ok status') 
      THEN('After the fifth read method call, output buffer contains [fe 39]bytes') 
      THEN('The sixth read method call returns Ok status') 
      THEN('After the sixth read method call, output buffer contains [2f 1c]bytes') 
      THEN('The seventh read method call returns Ok status') 
      THEN('After the seventh read method call, output buffer contains [9c 7f]bytes') 

Scenario : I2C mock device works correctly for  add_read method when input parameter has differnt buffer size, then read method is called repeatedly 
  GIVEN('Freshly constructed mock device') 
    WHEN('The add_read method is called two times , for first call input parameters were 50 bytes [63 ...... ce 3f] and OK I2CDeviceStatus and count is initialized to 50, for second method call, 25 data '
        'bytes [eb ... 09 31] and ok I2CDeviceStatus and count is initialized to 50 ,then read method is called twice with input parameter count initilized to 50') 
      THEN('The first read method call returns OK status') 
      THEN('After the first read method, the output buffer contains expected exactly 50 data bytes [63 .... ce 3f]') 
      THEN('The second read method call returns OK status') 
      THEN('After the second read method call,  the output buffer contains expected 25 data bytes [eb .... 09 31]') 

Scenario : Mock I2CDevice works correctly for write method and get_write method
  GIVEN('A freshly constructed mock device') 
    WHEN('The write method is called with input parameter [d5 1a 7a bc 24]bytes, add_write_status method is called with input Ok '
        'I2CDeviceStatus and then get_write method is called') 
      THEN('The write method returns ok status')
      THEN('The get_write method's output parameter count has value 50') 
      THEN('The get_write method call returns ok status') 
      THEN('After the get_write method call, output buffer contains [d5 1a 7a bc 24] bytes') 

    WHEN('The write method is called with input parameter [d5 1a 7a bc 24]bytes and add_write_status with input parameter  '
        'write_error I2CDeviceStatus is called  and then get_write method is called') 
      THEN('The write method returns ok status')
      THEN('The output parameter of get_write method count has value 50') 
      THEN('The get_write method call returns ok status') 
      THEN('After the get_write method call, output buffer contains [d5 1a 7a bc 24] bytes') 

    WHEN('The write method is called with input parameter [d5 1a 7a bc 24]bytes and add_write_status with input parameter'
        'not_supported I2CDeviceStatus is called and then get_write method is called') 
      THEN('The write method returns ok status')
      THEN('The get_write output parameter count has value 50') 
      THEN('The get_write method call returns ok status') 
      THEN('After the get_write method call, output buffer contains [d5 1a 7a bc 24] bytes') 

    WHEN('The write method is called with input parameters [d5 1a 7a bc 24]bytes and add_write_status method is called with parameter'
        'no_new_data I2CDeviceStatus, then get_write method is called') 
      THEN('The write method returns ok status')
      THEN('The get_write method output parameter count has value 50') 
      THEN('The get_write method call returns ok status') 
      THEN('After the get_write method call, output buffer contains [d5 1a 7a bc 24] bytes') 

Scenario : Mock device works correctly when write method is called multiple time and then get_write method is called multiple times 
  GIVEN('Freshly constructed mock-device') 
    WHEN('The write method is called five times with buffer bytes [db fe] [79 4b] [cd 93] [5a 56] '
        '[22 19]and add_write_staus is called five times with input I2CDevice status as [Ok] [write_error] [test_failed] [no_new_data] '
        '[invalid_argument] and then get_write method is called five times') 
      THEN('The five write method return ok status')
      THEN('The get_write output parameter count has value 50') 
      THEN('After the first write method call, get_write method returns ok status') 
      THEN('After the first write method call, output buffer contains [db fe] bytes') 
      THEN('After the second write method call, get_write method returns ok status') 
      THEN('After the second write method call, output buffer contains [79 4b] bytes') 
      THEN('After the third write method call, get_write method returns ok status') 
      THEN('After the third write method call, output buffer contains [cd 93] bytes') 
      THEN('After the fourth write method call, get_write method returns ok status') 
      THEN('After the fourth write method call, output buffer contains [5a 56] bytes') 
      THEN('After the fifth write method call, get_write method returns ok status') 
      THEN('After the fifth write method call, output buffer contains  [22 19] bytes') 

    WHEN('The write method is called four times with buffer bytes [db fe] [79 4b] [cd 93] [22 19] '
        'and add_write_status is called four times with input I2CDevice status as [Ok] [write_error] [ok] [ok] and then get_write method is called four times ') 
      THEN('The four write method calls return ok status')
      THEN('The get_write method output parameter count has value 50') 
      THEN('After the first write call, get_write method call returns ok status') 
      THEN('After the first write method call, output buffer contains [db fe] bytes') 
      THEN('After the second write method call, get_write method call returns ok status') 
      THEN('After the second write method call, output buffer contains [79 4b] bytes') 
      THEN('After the third write method call, get_write method call returns ok status') 
      THEN('After the third write method call, output buffer contains [cd 93] bytes') 
      THEN('After the fifth write method call, get_write method call returns ok status') 
      THEN('After the first write methodcall, output buffer contains [22 19] bytes') 

    WHEN('The write method is called three times with buffer bytes [db fe] [32 9b f7 4b] [cd 93]  '
        'and add_write_status is called with input [Ok] [ok] [ok] I2CDevice status, then get_write method is called four times') 
      THEN('The three write method call returns ok status')
      THEN('The get_write output parameter count has value 50') 
      THEN('After the first write method call, get_write method call returns ok status') 
      THEN('After the first write method call, output buffer contains [db fe] bytes') 
      THEN('After the second write method call, get_write method call returns ok status') 
      THEN('After the second write method call, output buffer contains [32 9b f7 4b] bytes') 
      THEN('After the third write method call, get_write method call returns ok status') 
      THEN('After the third write method call, output buffer contains [cd 93] bytes') 
      THEN('After the fourth write method call, get_write method call returns no_new_data status') 

Scenario : Mock device works correctly when write method is  get_write method is called alternately for multiple times 
  GIVEN('Freshly constructed mock-device') 
    WHEN('The write method is called with input paramter [db fe] and add_write_status method is called with input  ok I2CDeviceStatus and then '
        'get_write method is called this pattern is repeated 2 more time with input parameter [32 9b f7 4b] [52 f1 9d 1c] '
        'and add_write_status is called twice with input I2CDevice status as [write_error] [OK] ') 
      THEN('The firts write method call returns ok status')
      THEN('The get_write output parameter count has value 50') 
      THEN('After the first write method call, get_write call returns ok status') 
      THEN('After the first write method call, output buffer contains [db fe] bytes') 
      THEN('The second write method call returns ok status')
      THEN('After the second write method call, get_write method call returns ok status') 
      THEN('After the second write method call, output buffer contains [32 9b f7 4b] bytes') 
      THEN('The third write method call returns ok status')
      THEN('After the third write call, get_write method call returns ok status') 
      THEN('After the second write method call, output buffer contains [52 f1 9d 1c] bytes') 

Scenario : I2C mock device works correctly for get_write  method when write method has innput parameter as differnt buffer sizes 
  GIVEN('Freshly constructed mock device') 
    WHEN('The write method is called twice, first method call with input parameters, 50 data bytes [63 ... 09 31] and add_write_status is called with input parameter [ok][ok] I2CDeviceStatus and second method call has input parameter [eb .. 09 31] and add_write_status is called with input OK I2CDeviceStatus') 
      THEN('The first write call returns ok status')
      THEN('The get_write output parameter count has value 50') 
      THEN('The first get_write method returns OK status') 
      THEN('After the first get_write method call, output buffer contains expected 50 data bytes [63 ..ce 3f]') 
      THEN('The second write method returns ok status')
      THEN('The second get_write method returns OK status') 
      THEN('After the second get_write method call, get_write buffer contains expected 25 data bytes [eb ... 09 31]') 
