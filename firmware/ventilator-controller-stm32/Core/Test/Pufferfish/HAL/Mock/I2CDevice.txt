Scenario : I2C mock device works correctly for add_read and read method 
  GIVEN('Freshly constructed mock device') 
    WHEN('The add_read method is called with input parameters [a0 e8 d4 fd 97]bytes, and ok I2CDeviceStatus and then read method is called, where count is set to 50') 
      THEN('The count value remains 50') 
      THEN('The read method returns OK status') 
      THEN('After the read method call, read buffer contains [a0 e8 d4 fd 97] bytes') 

    WHEN('The add_read method is called with input parameters [a0 e8 d4 fd 97] bytes, and read_error I2CDeviceStatus and then read method is called') 
      THEN('The count value remains 50') 
      THEN('The read method returns read_error status') 
      THEN('After the read method call, read buffer contains [a0 e8 d4 fd 97] bytes') 

    WHEN('The add_read method is called with input parameters [a0 e8 d4 fd 97]bytes, and crc_check_failed I2CDeviceStatus and then read method is called') 
      THEN('The count value remains 50') 
      THEN('The read method returns crc_check_failed status') 
      THEN('After the read method call, read buffer contains [a0 e8 d4 fd 97] bytes') 

    WHEN('The add_read method is called with input parameters [a0 e8 d4 fd 97]bytes, and test_failed I2CDeviceStatus, and then read method is called') 
      THEN('The count value remains 50') 
      THEN('The read method returns test_failed status') 
      THEN('After the read method call , read buffer contains[a0 e8 d4 fd 97] bytes') 

Scenario : Mock I2CDevice works correctly when add_read method is called multiple times and then read method is called multiple times 
  GIVEN('Freshly constructed mock device') 
    WHEN('The add_read method is called five times with input parametes,[27 b8] [64 f3] [e1 7c] [d5 55] [2e 87] bytes'
         'and [ok][read_error][invalid_arguments][crc_check_failed][no_new_data] '
        'I2CDeviceStatus and then read method is called six times, where count is set to 50') 
      THEN('The count value remains 50') 
      THEN('The first read method call returns Ok status') 
      THEN('After the first read method call, read buffer contains [27 b8]bytes') 
      THEN('The second read method call returns read_error status') 
      THEN('After the second read method call, read buffer contains [64 f3]bytes') 
      THEN('The third read method call returns invalid_argument status') 
      THEN('After the third read method call, read buffer contains [e1 7c]bytes') 
      THEN('The fourth read method call returns crc_check_failed status') 
      THEN('After the fourth read method call, read buffer contains [d5 55]bytes') 
      THEN('The fifth read method call returns test_failed status') 
      THEN('After the fifth read method call, read buffer contains [2e 87]bytes') 
      THEN('The sixth read method call returns no_new_data status') 

    WHEN('The add_read method is called four times with input parametes,[27 b8] [64 f3] [e1 7c] [d5 55] bytes'
        'and [ok][read_error][invalid_arguments][ok] I2CDeviceStatus and then read method is called four times , where count is set to 50') 
      THEN('The count value remains 50') 
      THEN('The first read method call returns Ok status') 
      THEN('After the first read method call, read buffer contains [27 b8]bytes') 
      THEN('The second read method call returns read_error status') 
      THEN('After the second read method call, read buffer contains [64 f3]bytes') 
      THEN('The third read method call returns invalid_argument status') 
      THEN('After the third read method call, read buffer contains [e1 7c]bytes') 
      THEN('The fourth read method call returns ok status') 
      THEN('After the fourth read method call, read buffer contains [d5 55]bytes') 

    WHEN('The add_read method is called three times with input parametes,[27 b8] [64 f3] [e1 7c] bytes and [ok][ok][ok] I2CDeviceStatus and then read method is called three times, where count is set to 50') 
      THEN('The count value remains 50') 
      THEN('The first read method call returns Ok status') 
      THEN('After the first read method call, read buffer contains [27 b8]bytes') 
      THEN('The second read method call returns ok status') 
      THEN('After the second read method call, read buffer contains [64 f3]bytes') 
      THEN('The third read method call returns ok status') 
      THEN('After the third read method call, read buffer contains [e1 7c]bytes') 

Scenario : Mock I2CDevice works correctly when add_read method "alternating" and read method is called one after other  
  GIVEN('Freshly constructed mock device') 
    WHEN('The add_read method  with input parametes,[27 b8] and I2CDeviceStatus [ok] is called and then read method is called , this pattern is repeated for 6 more times with input parameter [64 f3] [2f 1c] '
        '[39 25] [f3 9e] [a9 78] [9c 7f] and [ok][ok][ok][ok][ok][ok] I2CDeviceStatus, where count is set to 50 ') 
      THEN('The count value remains 50') 
      THEN('The first read method call returns Ok status') 
      THEN('After the first read method call, read buffer contains is exactly [27 b8]bytes') 
      THEN('The second read method call returns ok status') 
      THEN('After the second read method call, read "output"buffer contains [64 f3]bytes') 
      THEN('The third read method call returns Ok status') 
      THEN('After the third read method call, read buffer contains [2f 1c]bytes') 
      THEN('The fourth read method call returns Ok status') 
      THEN('After the fourth read method call, read buffer contains [39 25]bytes') 
      THEN('The fifth read method call returns Ok status') 
      THEN('After the fifth read method call, read buffer contains [fe 39]bytes') 
      THEN('The sixth read method call returns Ok status') 
      THEN('After the sixth read method call, read buffer contains [2f 1c]bytes') 
      THEN('The seventh read method call returns Ok status') 
      THEN('After the seventh read method call, read buffer contains [9c 7f]bytes') 

Scenario : I2C mock device works correctly for  add_read method when input parameter has 50 bytes and 20 bytes then read method is called 
  GIVEN('Freshly constructed mock device , where count is set to 50')  "with different buffer size" "read called repetedly"
    WHEN('The add_read method is called with input parameters, 50 bytes [63 89 9a a9 27 54 0e 5e 90 c2 15 21 45 e1 e1 bb 99 55 73 a6 a4 04 27 ae 2d 1a f0 43 d6 76 d8 b6 ce 30 fc 89 e6 f2 e9 '
         'eb e0 73 a3 09 9a 4c 13 e3 ce 3f], followed by 25 data bytes [eb 65 a1 62 93 13 33 23 ff 97 ba 63 f2 46 46 dd 1a 64 a2 c1 50 04 d3 09 31] and ok I2CDeviceStatus then read method is called twice') 
      THEN('The count value remains 50') 
      THEN('The first read method call returns OK status') 
      THEN('After the first read method, read buffer contains expected 50 data bytes [63 89 9a a9 27 54 0e 5e 90 c2 15 21 45 e1 '
          'e1 bb 99 55 73 a6 a4 04 27 ae 2d 1a f0 43 d6 76 d8 b6 ce 30 fc 89 e6 f2 e9 eb e0 73 a3 09 9a 4c 13 e3 ce 3f]') 
      THEN('The second read method call returns OK status') 
      THEN('After the second read method call,  read buffer contains expected 25 data bytes [eb 65 a1 62 93 13 33 23 ff 97 ba 63 f2 '
          '46 46 dd 1a 64 a2 c1 50 04 d3 09 31]') 

Scenario : Mock I2CDevice works correctly for write method and get_write method  
  GIVEN('A freshly constructed mock device') 
    WHEN('The write method is called with input parameter [d5 1a 7a bc 24]bytes and Ok I2CDeviceStatus and then get_write method is called') 
      THEN('The count value is 50') 
      THEN('The get_write method call returns ok status') 
      THEN('After the get_write method call, get_write buffer contains [d5 1a 7a bc 24] bytes') 

    WHEN('The write method is called with input parameter [d5 1a 7a bc 24]bytes and write_error I2CDeviceStatus and then get_write method is called') 
      THEN('The count value is 50') 
      THEN('The get_write method call returns ok status') 
      THEN('After the get_write method call, get_write buffer contains [d5 1a 7a bc 24] bytes') 

    WHEN('The write method is called with input parameter [d5 1a 7a bc 24]bytes and not_supported I2CDeviceStatus and then get_write method is called') 
      THEN('The count value is 50') 
      THEN('The get_write method call returns ok status') 
      THEN('After the get_write method call, get_write buffer contains [d5 1a 7a bc 24] bytes') 

    WHEN('The write method is called with input parameters [d5 1a 7a bc 24]bytes and no_new_data I2CDeviceStatus, then get_write method is called') 
      THEN('The count value is 50') 
      THEN('The get_write method call returns ok status') 
      THEN('After the get_write method call, get_write buffer contains [d5 1a 7a bc 24] bytes') 

Scenario : Mock device works correctly when write method is called multiple time and then get_write method is called multiple times 
  GIVEN('Freshly constructed mock-device') 
    WHEN('The write method is called five times with buffer bytes [db fe] [79 4b] [cd 93] [5a 56] [22 19]and I2CDevice status as [Ok] [write_error] [test_failed] [no_new_data] '
        '[invalid_argument] and then get_write method is called five times') 
      THEN('The count value is 50') 
      THEN('After the first write method call, get_write method returns ok status') 
      THEN('After the first write method call, get_write buffer contains [db fe] bytes') 
      THEN('After the second write method call, get_write method returns ok status') 
      THEN('After the second write method call, get_write buffer contains [79 4b] bytes') 
      THEN('After the third write method call, get_write method returns ok status') 
      THEN('After the third write method call, get_write buffer contains [cd 93] bytes') 
      THEN('After the fourth write method call, get_write method returns ok status') 
      THEN('After the fourth write method call, get_write buffer contains [5a 56] bytes') 
      THEN('After the fifth write method call, get_write method returns ok status') 
      THEN('After the fifth write method call, get_write buffer contains  [22 19] bytes') 

    WHEN('The write method is called four times with buffer bytes [db fe] [79 4b] [cd 93] [22 19] and I2CDevice status as [Ok] [write_error] [ok] [ok] and then get_write method is called four times ') 
      THEN('The count value is 50') 
      THEN('After the first write call, get_write method call returns ok status') 
      THEN('After the first write method call, get_write buffer contains [db fe] bytes') 
      THEN('After the second write method call, get_write method call returns ok status') 
      THEN('After the second write method call, get_write buffer contains [79 4b] bytes') 
      THEN('After the third write method call, get_write method call returns ok status') 
      THEN('After the third write method call, get_write buffer contains [cd 93] bytes') 
      THEN('After the fifth write method call, get_write method call returns ok status') 
      THEN('After the first write methodcall, get_write buffer contains [22 19] bytes') 

    WHEN('The write method is called three times with buffer bytes [db fe] [32 9b f7 4b] [cd 93] and [Ok] [ok] [ok] I2CDevice status, then get_write method is called four times') 
      THEN('The count value is 50') 
      THEN('After the first write method call, get_write method call returns ok status') 
      THEN('After the first write method call, get_write buffer contains [db fe] bytes') 
      THEN('After the second write method call, get_write method call returns ok status') 
      THEN('After the second write method call, get_write buffer contains [32 9b f7 4b] bytes') 
      THEN('After the third write method call, get_write method call returns ok status') 
      THEN('After the third write method call, get_write buffer contains [cd 93] bytes') 
      THEN('After the fourth write method call, get_write method call returns no_new_data status') 

Scenario : Mock device works correctly when write method is called and then get_write method is called for 3 times 
  GIVEN('Freshly constructed mock-device') 
    WHEN('The write method is called with input paramter [db fe] and ok I2CDeviceStatus and then get_write method is called this pattern is repeated 2 more time with input parameter [32 9b f7 4b] [52 f1 9d 1c] and I2CDevice status as [write_error] [OK] ') 
      THEN('The count value is 50') 
      THEN('After the first write method call, get_write call returns ok status') 
      THEN('After the first write method call, get_write buffer contains [db fe] bytes') 
      THEN('After the second write method call, get_write method call returns ok status') 
      THEN('After the second write method call, get_write buffer contains [32 9b f7 4b] bytes') 
      THEN('After the third write call, get_write method call returns ok status') 
      THEN('After the second write method call, get_write buffer contains [52 f1 9d 1c] bytes') 

Scenario : I2C mock device works correctly for get_write  method when write method has innput parameter 50 bytes followed by 25 byted ,and [OK] [OK] I2C DeviceStatus 
  GIVEN('Freshly constructed mock device') 
    WHEN('The write method is called with input parameters, 50 data bytes [63 89 9a a9 27 54 0e 5e 90 c2 '
        '15 21 45 e1 e1 bb 99 55 73 a6 a4 04 27 ae 2d 1a f0 43 d6 76 d8 b6 ce 30 fc 89 e6 f2 e9 eb '
        'e0 73 a3 09 9a 4c 13 e3 ce 3f] followed by 25 data bytes [eb 65 a1 62 93 13 33 23 ff 97 ba 63 f2 46 46 dd 1a 64 a2 c1 50 04 d3 09 31] and [ok][ok] I2CDeviceStatus') 
      THEN('The count value is 50')
      THEN('The first get_write method returns OK status') 
      THEN('After the first get_write method call, get_write buffer contains expected 50 data bytes [63 89 9a a9 27 54 0e 5e 90 c2 '
          '15 21 45 e1 e1 bb 99 55 73 a6 a4 04 27 ae 2d 1a f0 43 d6 76 d8 b6 ce 30 fc 89 e6 f2 e9 eb e0 73 a3 09 9a 4c 13 e3 ce 3f]') 
      THEN('The second get_write method returns OK status') 
      THEN('After the second get_write method call, get_write buffer contains expected 25 data bytes [eb 65 a1 62 93 13 33 23 ff 97 ba '
          '63 f2 46 46 dd 1a 64 a2 c1 50 04 d3 09 31]') 

