
Scenario :The update method works correctly 
  GIVEN(' A state machine is constructed') 
    WHEN('The update method is called once with 4000 as input parameter ') 
      THEN('The first update method returns wait_warmup action')

    WHEN('The update method is called twice with 4000us as input parameter') 
      THEN('The first update method returns wait_warmup action') 
      THEN('The second update method returns wait_warmup') 

    WHEN('The update method is called thrice with [4000, 100, 5000] as input parameter') 
      THEN('The first update method returns wait_warmup action')
      THEN('The second update method returns check_range action') 
      THEN('The third update method returns wait_measurement action') 

    WHEN('The update method is called three times with [4000, 250, 500] as input parameter ') 
      THEN('The first update method returns wait_warmup action')
      THEN('The second update method returns check_range action')
      THEN('The third update method returns wait_measurement action') 

Scenario :The setup mehod works correctly 
  GIVEN('SFMC3019 sensor is created with mock I2C device with read buffer[04 02 60 06 11 a9 00 00 81 00 aa a6 ae dd 5b 00 00 81] used for read_product_id and read_conversion_factors, reseter is set to false and mock time set to 100us') 
    WHEN('The setup method is called thrice , where mock read buffer  is appended with bytes [97 38 1e] and junk bytes [01 02]and mock time is set to [100, 40000, 50000] before each corresponding setup call') 
      THEN('The first setup method returns setup state')
      THEN('After setup method is called first time, get_state method returns wait_warmup action')
      THEN('The second setup method returns setup state')
      THEN('After the setup method is called second time, get_state returns check_range action ')
      THEN('The third setup method retuns ok state') 
      THEN('The get_state method returns wait_measurement action') 
      THEN('The mock_device I2C's write buffer returns command byte 0xE102') 
      THEN('The mock_device I2C's read buffer remains unchanged') 

    WHEN('The setup method is called twice , where mock read buffer  is appended with bytes [97 38 1e] and junk bytes [01 02] and mock time is set to [100, 200] before each corresponding setup call') 
      THEN('The first setup method returns setup state')
      THEN('The get_state method returns wait_warmup action')
      THEN('The second setup method returns setup state')      
      THEN('The get_state method returns wait_warmup action ') 
      THEN('The mock_device I2C's write buffer returns command byte 0xE102') 
      THEN('The mock_device I2C's read buffer returns bytes 0x97381e') 

    WHEN('The setup method is called twice , where mock read buffer  is appended with bytes [15 35 a8] and junk bytes [01 02] and mock time is set to [100, 2000] before each corresponding setup call') 
      THEN('The first setup method returns setup state')
      THEN('The get_state returns wait_warmup action')
      THEN('The second setup method returns setup state')      
      THEN('The get_state method returns wait_warmup action ') 
      THEN('The mock_device I2C's write buffer returns command byte 0xE102') 
      THEN('The mock_device I2C's read buffer returns bytes 0x1535a8') 

    WHEN('The setup method is called thrice , where mock read buffer  is appended with bytes [15 35 a8] and junk bytes [01 02] and mock time is set to [100, 55000, 40000] before each corresponding setup call') 
      THEN('The first setup method returns setup state')
      THEN('The get_state method returns wait_warmup action')
      THEN('The second setup method returns setup state')
      THEN('The get_state method returns check_range action') 
      THEN('The third setup method retuns ok status') 
      THEN('The get_state method returns wait_measurement action') 
      THEN('The mock_device I2C's write buffer returns command byte 0xE102') 
      THEN('The mock_device I2C's read buffer returns junk bytes 0x0102') 

    WHEN('The setup method is called thrice , where mock read buffer  is appended with bytes [d5 64 4d] and junk bytes [01 02]and mock time is set to [100, 45000, 40000] before each corresponding setup call') 
      THEN('The first setup methos returns setup state')
      THEN('The get_state method returns wait_warmup action')
      THEN('The second setup methos returns setup state')
      THEN('The get_state method returns check_range action') 
      THEN('The third setup method retuns ok state') 
      THEN('The get_state method returns wait_measurement action') 
      THEN('The mock_device I2C's write buffer returns command byte 0xE102') 
      THEN('The mock_device I2C's read buffer returns bytes 0x0102') 

    WHEN('The setup method is called twice , where mock read buffer  is appended with bytes [d5 64 4d] and junk bytes [01 02] and mock time is set to [100, 5000] before each corresponding setup call') 
      THEN('The first setup method returns setup state')
      THEN('The get_state method returns wait_warmup action')
      THEN('The second setup method returns setup state')
      THEN('The get_state method returns wait_warmup action ') 
      THEN('The mock_device I2C's write buffer returns command byte 0xE102') 
      THEN('The mock_device I2C's read buffer returns bytes 0xd5644d') 

Scenario :The output method works correctly 
  GIVEN('SFMC3019 sensor is created by mock I2C device with read buffer[04 02 60 06 11 a9 00 00 81 00 aa a6 ae dd 5b 00 00 81 97 38 1e 97 38 1e] used for read_product_id and read_conversion_factors, read_sample and junk bytes [01 02], reseter is set to false and mock time set to 100us') 
    WHEN('The output method is called thrice with mock time set to [40000,1000] and Action is set to wait_measurement') 
      THEN('The first output method returns ok state')
      THEN('The get_state method returns wait_measurement action ')
      THEN('The second output method returns ok state') 
      THEN('The get_state method returns measure action') 
      THEN('The third output method returns setup state')
      THEN('The get_state method returns wait_measurement method')
      THEN('The output parameter flow returns -35.60588F value') 
      THEN('The mock_device I2C's write buffer returns command byte 0xE102') 
      THEN('The mock_device I2C's read buffer returns  junk bytes 0x0102') 

    WHEN('The output method is called thrice with mock time set to [40000, 10] and Action is set to wait_measurement') 
      THEN('The first output method returns ok state')
      THEN('The get_state method returns wait_measurement action')
      THEN('The  second output method returns ok state') 
      THEN('The get_state method returns measure action')
      THEN('The third output method returns setup state') 
      THEN('The get_state method returns wait_measurement action')
      THEN('The output parameter flow returns -35.60588F value') 
      THEN('The mock_device I2C's write buffer returns command byte 0xE102') 
      THEN('The mock_device I2C's read buffer returns junk bytes 0x0102') 

  GIVEN('SFMC3019 sensor is created by mock I2C device with read buffer[04 02 60 06 11 a9 00 00 81 00 aa a6 ae dd 5b 00 00 81 15 35 a8 15 35 a8]  used for read_product_id and read_conversion_factors, read_sample and junk bytes [01 02], reseter is set to false and mock time set to 100us') 
    WHEN('The output method is called thrice with mock time set to [40000, 1000], and Action is set to wait_measurement') 
      THEN('The first output method returns ok state')
      THEN('The get_state method returns wait_measurement action')
      THEN('The second output method returns ok state')
      THEN('The get_state method returns wait_measurement action')
      THEN('The third output method returns setup state')
      THEN('The get_state method returns wait_measurement action')
      THEN('The output parameter flow returns 154.11765f value') 
      THEN('The mock_device I2C's write buffer returns command byte 0xE102') 
      THEN('The mock_device I2C's read buffer returns  junk bytes 0x0102') 

    WHEN('The output method is called thrice with mock time set to [40000, 10], and Action is set to wait_measurement') 
      THEN('The first output method returns ok state')
      THEN('The get_state method returns wait_measurement action')
      THEN('The second output method returns ok state')
      THEN('The get_state method returns wait_measurement action')
      THEN('The third output method returns setup state')
      THEN('The get_state method returns wait_measurement action')
      THEN('The output parameter flow returns 154.11765f value') 
      THEN('The mock_device I2C's write buffer returns command byte 0xE102') 
      THEN('The mock_device I2C's read buffer returns  junk bytes 0x0102') 

  GIVEN('SFMC3019 sensor is created by mock I2C device with read buffer[04 02 60 06 11 a9 00 00 81 00 aa a6 ae dd 5b 00 00 81 d5 64 4d d5 64 4d]  used for read_product_id and read_conversion_factors, read_sample , reseter is set to false and mock time set to 500us') 
    WHEN('The output method is called once, mock time is set to [4000]and Action is set to wait_warmup') 
      THEN('The output method returns failed state') 
      THEN('The mock_device I2C's write buffer returns command byte 0xE102') 
      THEN('The mock_device I2C's read buffer returns 0x00') 
