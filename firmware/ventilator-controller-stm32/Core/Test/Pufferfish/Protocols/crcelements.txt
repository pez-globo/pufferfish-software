/* compute_body_crc
Scenario: CRCElement: The compute_body_crc method correctly computes the CRC of a payload from a CRCElement body given as input
  GIVEN("The CRCElement::compute_body_crc static method")
    WHEN("The compute_body_crc is called on an input_buffer body with an empty payload")
      THEN("the computed CRC is '0x00000000'")

    WHEN("the compute_body_crc is called on an input_buffer body with payload '123456789'")
      THEN("the computed crc is '0xe3069283'")

    WHEN("the compute_body_crc is called on an input_buffer body with payload '0x00' ")
      THEN("the computed crc is '0x527d5351'")

    WHEN("the compute_body_crc is called on an input_buffer body with payload '0x01' ")
      THEN("the computed crc is '0xa016d052'")

/* write function
Scenario: ConstructedCRCElement: The write method correctly generates a body from the payload given in the constructor
  GIVEN("A crc element constructed with payload=[0x01, 0x02, 0x05]")
    WHEN("The crc and payload are written to the output buffer")
      THEN("the crc accessor method returns 0 before the write method is called")
      THEN("After the write method is called, the crc accessor method returns a value equal to the result of directly computing a CRC on the payload.")
      THEN("The CRC field of the body's header matches the value returned by the crc accessor method.")
      THEN("The body's payload section correctly stores the payload as 0x01 0x02 0x05")
      THEN("The output buffer is as expected")

  GIVEN("A crc element constructed with an empty payload")
    WHEN("The crc and payload are written to the output buffer")
      THEN("the crc accessor method returns 0 before the write method is called")
      THEN("After the write method is called, the crc accessor method returns 0")      
      THEN("The CRC field of the body's header matches the value returned by the crc accessor method.")
      THEN("The body's payload section is empty")
      THEN("The output buffer is as expected")

/* parse function
Scenario: CRCElement: The parse method correctly updates its internal crc value and the constructor's payload buffer from the input buffer
  GIVEN("A CRCElement constructed with an empty payload buffer with a capacity of 254 bytes")

    WHEN("A body without a complete 4-byte header is parsed")
      THEN("the parse method reports out of bounds status")
      THEN("the constructor's payload buffer remains unchanged")

    WHEN("A body with a complete 4-byte header, and a payload consistent with the CRC field of the header, is parsed")
      THEN("the parse method reports ok status")
      THEN("After the parse method is called, the value returned by the crc accessor method is equal to the crc field of the input body's header")
      THEN("the payload returned from the payload accessor method is equal to the payload from the body")
      THEN("the payload given in the CRCElement constructor is independent of the input body")
      THEN("the payload accessor method returns a reference to the payload buffer given in the CRCElement constructor") 

    WHEN("A body with a complete 4-byte header, and a payload inconsistent with the CRC field of the header, is parsed")
      THEN("the parse method reports ok status")
      THEN("After the parse method is called, the value returned by the crc accessor method is equal to the crc field of the input body's header")
      THEN("the value returned by the crc accessor method is inconsistent with the payload")
      THEN("the payload returned from the payload accessor method is equal to the payload from the body")
      THEN("the payload given in the CRCElement constructor is independent of the input body")
      THEN("the payload accessor method returns a reference to the payload buffer given in the CRCElement constructor")

  GIVEN("A CRCElement constructed with a non-empty payload buffer of capacity 254 bytes")
    WHEN("A body with a complete 4-byte header, and a payload consistent with the CRC field of the header, is parsed")
      THEN("the crc accessor method returns 0 before the parse method is called")
      THEN("the payload returned from the payload accessor method is equal to the payload buffer given in the CRCElement constructor")
      THEN("the parse method reports ok status")
      THEN("After the parse method is called, the value returned by the crc accessor method is equal to the crc field of the input body's header")
      THEN("the payload returned from the payload accessor method is equal to the payload from the body")
      THEN("the payload given in the CRCElement constructor is independent of the input body")
      THEN("the payload accessor method returns a reference to the payload buffer given in the CRCElement constructor")

  GIVEN("A CRC element constructed with an empty payload buffer with a capacity of 10 bytes")
    WHEN("A body of size 20 bytes with a complete 4-byte header, and a payload of capacity 16 bytes is parsed")
      THEN("the parse method reports out of bounds status")
      THEN("the constructor's payload buffer remains unchanged")

/* write parse roundtrip
Scenario: CRCElement correctly preserves data in roundtrip writing and parsing

  GIVEN("A CRC Element constructed with a non empty payload buffer with a capacity of 254 bytes")

    WHEN("A body with CRC and payload is generated, parsed into a new ParsedCRCElement object, and generated again with a new ConstructedCRCElement object")
      # write  
      THEN("the crc accessor method returns 0 before the first write method is called")
      THEN("The first write method call returns ok status")
      THEN("After the first write method is called, the crc accessor method returns a value equal to the result of directly computing a CRC on the payload.")
      THEN("The CRC field of the body's header matches the value returned by the crc accessor method.")
      THEN("The body's payload section correctly stores the payload as '0x01 0x05 0x01 0x02 0x03 0x04 0x05'")
      THEN("The output buffer is as expected")
      # parse
      THEN("The parse method reports ok status")
      THEN("After the parse method is called, the value returned by the crc accessor method is equal to the crc field of the input body's header")
      THEN("the payload returned from the payload accessor method is equal to the payload from the body")
      THEN("the payload given in the ParsedCRCElement constructor is independent of the input body")
      # write  
      THEN("The second write method call returns ok status")
      THEN("After the second write method is called, the crc accessor method returns a value equal to the result of directly computing a CRC on the payload.")
      THEN("The CRC field of the body's header matches the value returned by the crc accessor method.")
      THEN("The body's payload section correctly stores the payload as '0x01 0x05 0x01 0x02 0x03 0x04 0x05'")
      THEN("The output buffer is as expected")

/* CRCElementReceiver
Scenario: CRCElementReceiver correctly parses CRCElement bodies and performs consistency checking on them

  GIVEN("A CRC element receiver of capacity 254 bytes and output_crcelement constructed with an empty payload buffer")
    WHEN("A body with a complete 4-byte header, and a payload consistent with the CRC field of the header, is given to the receiver")
      THEN("the transform method reports ok status")
      THEN("After the transform method is called, the value returned by the crc accessor method of the output_crcelement is equal to the crc field of the input body's header")
      THEN("the payload returned from the payload accessor method of the output_crcelement is equal to the payload from the body")
      THEN("the payload buffer updated in the CRCElement is independent of the input body")

    WHEN("An empty input_buffer is given to the crc element receiver")
      THEN("the transform method reports invalid parse status")
      THEN("After the transform method is called, the value returned by the crc accessor method of the output_crcelement is equal to 0x00000000")
      THEN("the payload returned from the payload accessor method of the output_crcelement is equal to the payload from the body")

    WHEN("body with less than 4 bytes is given to the crc element receiver")
      // body of length 1,2,3 bytes is passed, passing 4 bytes will give a invalid_crc error instead
      THEN("the transform method reports invalid parse status") // for each time
      THEN("After the transform method is called, the value returned by the crc accessor method of the output_crcelement is equal to 0x00000000") // for each time
      THEN("the payload returned from the payload accessor method of the output_crcelement is equal to the payload from the body")

    WHEN("A body with a complete 4-byte header, and a payload inconsistent with the CRC field of the header, is given to the receiver")
      THEN("the transform method reports invalid crc status")
      THEN("After the transform method is called, the value returned by the crc accessor method is equal to the crc field of the input body's header")

  GIVEN("A CRC element receiver of capacity 254 bytes and output_crcelement constructed with an empty payload buffer")
    WHEN("A body with a complete 4-byte header, and a payload consistent with the CRC field of the header, is given to the receiver")
      THEN("the transform method reports ok status")
      THEN("After the transform method is called, the value returned by the crc accessor method of the output_crcelement is equal to the crc field of the input body's header")
      THEN("the payload returned from the payload accessor method of the output_crcelement is equal to the payload from the body")
      THEN("the payload buffer updated in the CRCElement is independent of the input body")
  
    WHEN("An empty input_buffer is given to the crc element receiver")
      THEN("the transform method reports invalid parse status")
      THEN("After the transform method is called, the value returned by the crc accessor method of the output_crcelement is equal to 0x00000000")
      THEN("After the transform method is called, the payload given in the ParsedCRCElement constructor remains unchanged")

    WHEN("An empty input_buffer is given to the crc element receiver and output_crcelement with a non-zero crc member")
      THEN("The write method of output_crcelement reports ok status")
      THEN("The value returned by the crc accessor method of output_crcelement is '0x40D06D79'")
      THEN("the transform status is equal to invalid parse")
      THEN("After the transform method is called, the value returned by the crc accessor method of the output_crcelement is equal to 0x40D06D79")
      THEN("After the transform method is called, the payload given in the ParsedCRCElement constructor remains unchanged")

  GIVEN("A CRC element receiver of capacity 10 bytes")
    WHEN("A body of size 20 bytes with a complete 4-byte header, and a payload of capacity 16 bytes is given to the receiver")
      THEN("the transform method reports invalid parse status")
      THEN("After the transform method is called, the crc accessor method returns 0")
      THEN("The payload buffer returned by the payload accesor method of the output_crcelement is empty")

/* CRCElementSender
Scenario: CRCElementSender: correctly generates CRCElement bodies from payloads

  GIVEN("A CRC element sender of capacity 254 bytes")
    WHEN("A payload is given along with a sufficiently large output buffer")
      THEN("the transform method reports ok status")
      THEN("output buffer is as expected, equal to (crc + input_buffer)")
      THEN("The CRC field of the output buffer's header is consistent with the input_payload.")

  GIVEN("A CRC element sender of buffer size 20 bytes")
    WHEN("The output buffer is not large enough for the input payload")
      THEN("the transform status is equal to invalid_length")