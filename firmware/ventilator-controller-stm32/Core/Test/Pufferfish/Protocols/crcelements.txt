/* compute_body_crc
Scenario: CRCElement: The compute_body_crc function correctly computes crc from body
  GIVEN("A CRC element initialized with an empty payload")
    WHEN("the crc is computed from the payload")
      THEN("the computed crc is equal to the expected crc")

  GIVEN("A CRC Element initialized with the payload '123456789'")
    WHEN("the crc is computed from the payload")
      THEN("the computed crc is equal to the expected crc")

  GIVEN("A crc element is initalised with payload 0x00")
    WHEN("the crc is computed from the payload")
      THEN("the computed crc is equal to the expected crc")

  GIVEN("A crc element is initalised with payload 0x01")
    WHEN("the crc is computed from the payload")
      THEN("the computed crc is equal to the expected crc")

/* write function
Scenario: CRCElement: The write function correctly generates body from computed crc and payload
  GIVEN("A crc element initalised with payload=[0x01, 0x02, 0x05]")
    WHEN("The crc and payload are written to the output buffer")
      THEN("crc computed in write method is same as crcchecker compute")
      THEN("The output buffer is as expected")

  GIVEN("crc element is initalised with 0 bytes")
    WHEN("The crc and payload are written to the output buffer")
      THEN("CRC is equal to 0")
      THEN("The output buffer is as expected")

/* parse function
Scenario: CRCElement: The parse function correctly updates internal crc and payload fields from the input buffer
  GIVEN("A CRC element is initalised with valid payload parameter")
    WHEN("a body with good crc and payload fields is parsed")
      THEN("the parse status should be ok")
      THEN("crc from the CRCElement is equal to the expected crc for the given payload")
      THEN("payload from the CRCElement is equal to the expected payload from the body")

    WHEN("body less than size of 4 bytes is parsed")
      THEN("the parse status is out of bounds")

    WHEN("body with invalid crc is parsed")
      THEN("the parse status is ok")
      THEN("The crc from the CRCElement is equal to the crc in the body/input_buffer")
      THEN("crc from the CRCElement is not equal to the expected crc for the given payload")
      THEN("payload from the CRCElement is equal to the expected payload from the body")

/* write parse roundtrip
Scenario: The crc element correctly writes and parses to a buffer
  GIVEN("A CRC Element initialized with a non empty payload buffer with a capacity of 254 bytes")
    WHEN("The body is generated and then parsed")
      # write  
      THEN("The status of write function returns ok")
      THEN("The crc from the crc element is equal to expected")
      THEN("The payload of the crc element is as expected")
      THEN("The output buffer is as expected")
      # parse
      THEN("The status of parse function returns ok")
      THEN("The crc from the CRCElement is equal to the crc in the body")
      THEN("payload from the CRCElement is equal to the expected payload from the body")


/* CRCElementReceiver
Scenario: CRCElementReceiver: The crc element receiver correctly parses datagrams into payloads
  GIVEN("A CRC element receiver")
    WHEN("body with valid crc and payload is given to crc element receiver")
      THEN("the transform status for crc element receiver is ok")
      THEN("the crc in output crc_element is equal to the crc given in the input_buffer")
      THEN("the payload in the output crc element is equal to the payload given in the input_buffer")

    WHEN("body with 0 bytes is given to the crc element receiver")
      THEN("the transform status is equal to invalid parse")
      THEN("the crc in output crc_element is equal to the given crc in input_buffer")

    WHEN("The CRC stored in the input body is inconsistent with the payload stored in the input body")
      THEN("the transform status is equal to invalid crc")
      THEN("the crc in output crc_element is equal to the invalid crc given in input buffer")

/* CRCElementSender
Scenario: CRCElementSender: The crc element receiver correctly generates datagrams from payload
  GIVEN("A CRC element sender of buffer size 254 bytes")
    WHEN("A payload is given along with a sufficiently large output buffer")
      THEN("the transform status is ok")
      THEN("output buffer is as expected, equal to (crc + input_buffer)")

  GIVEN("A CRC element sender of buffer size 20 bytes")
    WHEN("The output buffer is not large enough for the input payload")
      THEN("the transform status is equal to invalid_length")