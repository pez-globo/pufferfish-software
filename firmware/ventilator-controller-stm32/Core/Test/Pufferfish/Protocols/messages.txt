/* Write function
Scenario: Message: The write method correctly generates an encoded body from the protobuf message descriptor payload

  GIVEN("A Message object default-constructed with StateSegment Taggedunion, default message types and a max size of 252 bytes as its class template parameters")
  // assertions carried out in given:
  // message class type member is 0

    // setup:
    // message class type member set to 5
    // payload of parameters_request is set
    // message descriptor array containing one element corresponding to Unknown message
    WHEN("The value of the message payload tag is greater than the size of the message descriptor array")
      THEN("The write method reports invalid type status")
      THEN("After the write method is called, the type member remains unchanged")
      THEN("The payload.values field data remains unchanged")
      THEN("The output buffer remains unchanged")

    // setup:
    // message class type member is unchanged
    // payload tag is set to Unknown
    WHEN("The message payload tag is such that it corresponds to Unrecognized message descriptor in descriptor array")
      THEN("The write method reports invalid type status")
      THEN("After the write method is called, the type member remains unchanged")
      THEN("The output buffer remains unchanged")

    WHEN("The output buffer is too small to hold the generated body")
      THEN("The write method reports invalid length status")
      THEN("After the write method is called, the output buffer remains unchanged")

    WHEN("The size of the output buffer is zero")
      THEN("The write method reports invalid length status")

  GIVEN("A Message object constructed with StateSegment Taggedunion, default message types and a max size of 126 bytes")
    WHEN("The payload is a sensor measurements message and write method is called")
      THEN("The write method reports ok status")
      THEN("The body's header correctly stores the value of message type obtained from the message payload tag")
      THEN("The output buffer is as expected")

  GIVEN("A Message object constructed with StateSegment Taggedunion, default message types and a max size of 508 bytes")
    WHEN("The sensor measurments message data is written")
      THEN("The write method reports ok status")
      THEN("The body's header correctly stores the value of message type obtained from the message payload tag")
      THEN("The output buffer is as expected")

/* Write function for each of the message types (example: sensor_measurements)
    WHEN("The payload is a sensor measurements message and write method is called")
    // setup: sensor_measurements.flow = 50
      THEN("The write method reports ok status")
      THEN("The body's header correctly stores the value of message type obtained from the message payload tag")
      THEN("The output buffer is as expected")
/*

/* Parse function

Scenario: Message: The parse method correctly updates internal message type and sets the message payload fields after decoding from the input buffer

  GIVEN("A Message object constructed with StateSegment Taggedunion, default message types and a max size of 252 bytes")

    WHEN("A body with an encoded payload and 1 byte header of value equal to 0 is parsed")
      THEN("The parse method reports invalid type status")
      THEN("After the parse method is called, The value assigned to the type member is equal to the input_buffer body's header")
      THEN("The payload Taggedunion tag is set to Unknown")
      THEN("The message payload fields are not set")

    WHEN("An empty input buffer body is parsed")
      THEN("The parse method reports invalid length status")
      THEN("The payload Taggedunion tag is set to Unknown")
      THEN("The message payload fields are not set")

    WHEN("A body with an empty payload and 1 byte header of value equal to the message descriptor array size is parsed")
      THEN("The parse method reports invalid type status")
      THEN("After the parse method is called, The value assigned to the type member is equal to the input_buffer body's header")
      THEN("The payload Taggedunion tag is set to Unknown")
      THEN("The message payload fields are not set")

    WHEN("A body with an empty payload and 1 byte header of value greater than the message descriptor array size is parsed")
      THEN("The parse method reports invalid type status")
      THEN("After the parse method is called, The value assigned to the type member is equal to the input_buffer body's header")
      THEN("The payload Taggedunion tag is set to Unknown")
      THEN("The message payload fields are not set")

    WHEN("A body with a 1 byte header and payload of sensor_measurements message with invalid encoding is parsed")
      THEN("The parse method reports invalid encoding status")
      THEN("After the parse method is called, The value assigned to the type member is equal to the input_buffer body's header")
      THEN("The payload Taggedunion tag is set to sensor_measurements")
      THEN("The message payload fields are not set")

    WHEN("The input buffer size is greater than the payload max size")
      THEN("The status of the parse function returns invalid encoding")

/* test cases for parse functions for each message type
    WHEN("A body with 1 byte header and a paylod of {Message type} message type is parsed")
      THEN("The parse method reports ok status")
      THEN("After the parse method is called, The value assigned to the type member is equal to the input_buffer body's header")
      THEN("The payload Taggedunion tag is set to {Message type}")
      THEN("The message payload field values are as expected")
      THEN("The input buffer is unchanged after parse")
/*

/* Roundtrip
Scenario: The Message class correctly preserves data in roundtrip writing and parsing

  GIVEN("A Message object constructed with StateSegment Taggedunion, default message types and a max size of 252 bytes")
    WHEN("A body is generated from the payload of parameters request message, which is then parsed into a new message object and generated again")
      // write
      THEN("The write method reports ok status")
      THEN("The body's header correctly stores the value of message type obtained from the message payload tag")
      THEN("The output buffer is as expected")

      // parse
      THEN("The parse method reports ok status")
      THEN("After the parse method is called, The value assigned to the type member is equal to the input_buffer body's header")
      THEN("The payload Taggedunion tag is set to {Message type}")
      THEN("The message payload field values are as expected")
      THEN("The input buffer is unchanged after parse")

      // write
      THEN("The write method reports ok status")
      THEN("The body's header correctly stores the value of message type obtained from the message payload tag")
      THEN("The output buffer is as expected")

/* Message Receiver

Scenario: The Message Receiver class correctly transforms messages into payloads

  GIVEN("A MessageReceiver object is constructed with default parameters")

    WHEN("A body with a 1 byte header and a paylod of {Message type} message type is given to the Receiver")
      THEN("The transform method reports ok status")
      THEN("After the transform method is called, The value assigned to the type member is equal to the input_buffer body's header")
      THEN("The payload Taggedunion tag is set to {Message type}")
      THEN("The message payload field values are as expected")
      THEN("The input buffer is unchanged after transform")      

    WHEN("A MessageReceiver object is constructed with a smaller descriptors array and transform method is called")
      THEN("The transform method reports ok status")
      THEN("After the transform method is called, The value assigned to the type member is equal to the input_buffer body's header")
      THEN("The payload Taggedunion tag is set to {Message type}")
      THEN("The message payload field values are as expected")
      THEN("The input buffer is unchanged after transform")      

    WHEN("The message object has some data prior to the transform method call")
      THEN("The transform method reports ok status")
      THEN("After the transform method is called, The value assigned to the type member is equal to the input_buffer body's header")
      THEN("The payload Taggedunion tag is set to {Message type}")
      THEN("The message payload field values are as expected")
      THEN("The input buffer is unchanged after transform")

    WHEN("The input buffer is altered after the transform method is called")
      THEN("The transform method reports ok status")
      THEN("After the transform method is called, The value assigned to the type member is equal to the input_buffer body's header")
      THEN("The payload Taggedunion tag is set to {Message type}")
      THEN("The message payload field values are as expected")
      THEN("The input buffer is unchanged after transform")
      THEN("After the input buffer is altered, The message payload field values remain unchanged")

/* test cases for each message type
    WHEN("A body with 1 byte header and a paylod of {Message type} message type is given to the Receiver")
      THEN("The transform method reports ok status")
      THEN("After the transform method is called, The value assigned to the type member is equal to the input_buffer body's header")
      THEN("The payload Taggedunion tag is set to {Message type}")
      THEN("The message payload field values are as expected")
      THEN("The input buffer is unchanged after transform")
/*

    // Error test cases similar to parse function

/* Message Sender

Scenario: The Message Sender class correctly transforms payloads into messages

  GIVEN("A MessageSender object is constructed with default parameters")

/* test cases for each message type (example: sensor_measurements)
    WHEN("The payload is a sensor measurements message and transform method is called")
    // setup: sensor_measurements.flow = 50
      THEN("The transform method reports ok status")
      THEN("The body's header correctly stores the value of message type obtained from the message payload tag")
      THEN("The output buffer is as expected")
/*

    // Error test cases similar to write function