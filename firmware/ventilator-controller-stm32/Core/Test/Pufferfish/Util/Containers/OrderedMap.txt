Scenario: The OrderedMap is constructed from initializer list works corretly
  GIVEN('An OrderedMap constructed with capacity 11, has {1, 0}, {2,1}, {3,2} and {4,3} items') 
    WHEN('The size method is called on OrderedMap')
      THEN('The size method returns size as 4')

    WHEN('The avaliable method is called ')
      THEN('The avaliable method reports that 7 spaces are avlaible ')

    WHEN('The full method is called')
      THEN('The full method reports that the OrderedMap is not full')

    WHEN('The empty method is called')
      THEN('The empty method reports that the OrderedMap is non-empty')

    WHEN('The has method is called')
        THEN('The has method returns true for 1-4 keys')

    WHEN('The items method is called')
        THEN('items method return expected 4 sequence of data')

    WHEN('The input method is used on 5th item') 
      THEN('The input method returns ok status') 
      THEN('The max_size method reports, OrderedMap has capacity 11') 
      THEN('After the input method, the size method reports size as 5 ') 
      THEN('The avaliable method reports that 6 spaces are avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The erase method reports ok status for 1st key ') 
      THEN('The has method returns true for 1-5 keys') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [6]to[1000] keys')
      THEN('After input method, items method returns expected 5 sequence of data') 

    WHEN('The output method is called on 2nd and 4th items') 
      THEN('The output  method returns ok status for 2nd item') 
      THEN('After the output method, it gives expected value for 2nd key')  
      THEN('The output  method returns ok status for 4th item') 
      THEN('After the output method, it gives expected values for 4th key')  
      THEN('The max_size method reports, OrderedMap has capacity 11') 
      THEN('After the input method, the size method reports size as 4') 
      THEN('The avaliable method reports that 7 spaces are avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The erase method reports ok status for 1st key ') 
      THEN('The has method returns true for 1-4 keys') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [5]to[1000] keys')
      THEN('After output method, items method returns expected 4 sequence of data') 

    WHEN('The erase method is called on 4th and 5th item') 
      THEN('The erase method returns ok status for 4th key') 
      THEN('The erase method returns out of bounds for 5th key') 
      THEN('The max_size method reports, OrderedMap has capacity 11') 
      THEN('After the input method, the size method reports size as 3') 
      THEN('The avaliable method reports that 8 spaces are avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The has method returns true for 1-itemms3 keys') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [4]to[1000] keys')
      THEN('The has method returns false for 4th key')  
      THEN('After erase method, items method returns expected 3 sequence of data') 

    WHEN('The clear method is called on OrderedMap') 
      THEN('The has method returns false for 11 keys') 
      THEN('The has method returns false for [-1000]to[1000] keys')
      THEN('The max_size method reports, OrderedMap has capacity 11') 
      THEN('The avaliable method reports that 11 spaces are avaliable') 
      THEN('The full method reports that the OrderedMap is not completely filled') 
      THEN('The empty method reports that the OrderedMap is empty') 

  GIVEN('An OrderedMap constructed with capacity 11, is completely filled with 6 bytes of data') 
    WHEN('The size method is called on OrderedMap')
      THEN('The size method returns size as 11')

    WHEN('The avaliable method is called ')
      THEN('The avaliable method reports that 1 space are avlaible ')

    WHEN('The full method is called')
      THEN('The full method reports that the OrderedMap is not full')

    WHEN('The empty method is called')
      THEN('The empty method reports that the OrderedMap is non-empty')

    WHEN('The has method is called')
        THEN('The has method returns true for 1-6 keys')
        THEN('The has method returns false for [-1000]to[0] keys')
        THEN('The has method returns false for [7]to[1000] keys')

    WHEN('The items method is called')
      THEN('Indexing into the containers for keys 1, 2, 3, 4,5 and 6 returns the values 0,1,2,3,4 and 5 respectively')

    WHEN('The input method is called on 7th item') 
      THEN('The input method returns out of bounds status')  
      THEN('The max_size method reports, OrderedMap has capacity 6') 
      THEN('After the input method, the size method reports size as 6 ') 
      THEN('The avaliable method reports that 0 space are avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The erase method reports ok status for 1st key ') 
      THEN('The has method returns true for 1-6 keys') 
      THEN('Indexing into the containers for keys 1, 2, 3, 4,5 and 6 returns the values 0,1,2,3,4 and 5 respectively') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [7]to[1000] keys')

    WHEN('The output method is called on 2nd item and 4th item') 
      THEN('The output  method returns ok status for 2nd key') 
      THEN('After the output method, it gives expected value for 2nd key')  
      THEN('The output  method returns ok status for 4th key') 
      THEN('After the output method, it gives expected values for 4th key')  
      THEN('The max_size method reports, OrderedMap has capacity 6') 
      THEN('After the input method, the size method reports size as 6') 
      THEN('The avaliable method reports that 0 space are avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The erase method reports ok status for 1st key ') 
      THEN('The has method returns true for 1-6 keys') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [7]to[1000] keys')
      THEN('Indexing into the containers for keys 1, 2, 3, 4,5 and 6 returns the values 0,1,2,3,4 and 5 respectively') 

    WHEN('The erase method is called on 4th and 7th key') 
      THEN('The erase method returns ok status for 4th key') 
      THEN('The erase method returns out of bounds for 7th key') 
      THEN('The max_size method reports, OrderedMap has capacity 6') 
      THEN('After the input method, the size method reports size as 5') 
      THEN('The avaliable method reports that 1 space is avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The has method returns true for 1-3 keys') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [4]to[1000] keys')
      THEN('The has method returns false for 4th key')  
      THEN('After erase method, operator method returns expected data {1,0}{2,1}{3,2}') 

    WHEN('The clear method is called on OrderedMap') 
      THEN('The has method returns false for 11 keys') 
      THEN('The max_size method reports, OrderedMap has capacity 6') 
      THEN('The avaliable method reports that 6 spaces are avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is empty')  

Scenario: The input method in OrderedMap works correctly
  GIVEN('An empty OrderedMap with capacity 11') 
    WHEN('The input method is called on given OrderedMap for {0,0},{1,1},{2,2}{3,3}{4,4}{5,5}{6,6}{7,7} items') 
      THEN('The input method returns ok status for 8 items') 
      THEN('The max_size method reports, OrderedMap has capacity 11') 
      THEN('After the input method, the size method reports size as 8 ') 
      THEN('The avaliable method reports that 3 spaces are avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The erase method reports ok status for 7th key ') 
      THEN('The has method returns true for 0-7 keys') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [8]to[1000] keys')
      THEN('The has method returns false for 9th and 10th key') 
      THEN('After input method, items method returns expected 8 sequence of data') 

  GIVEN('An OrderedMap with capacity 11 has {0,0},{1,1},{2,2}{3,3}{4,4}{5,5}{6,6}{7,7} items') 
    WHEN('The input method is called on 7th and 8th items') 
      THEN('The input method return ok status for 7th item') 
      THEN('The input method return ok status for 8th item') 
      THEN('The max_size method reports, OrderedMap has capacity 11') 
      THEN('After the input method, the size method reports size as 9 ') 
      THEN('The avaliable method reports that 2 spaces are avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The erase method reports ok status for 7th key ') 
      THEN('The has method returns true for 0-7 keys ') 
      THEN('The has method returns false for 9th and 10th keys') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [8]to[1000] keys')
      THEN('After input method, items method returns expected 8 sequence of data') 

    WHEN('The input method is called on 8th, 9th,10th and 11th item') 
      THEN('The input method returns ok status for 8th, 9th and 10th item') 
      THEN('The input method returns out of bounds status for 11th item') 
      THEN('The max_size method reports, OrderedMap has capacity 11') 
      THEN('After the input, the size method reports size as 11 ')  
      THEN('The avaliable method reports that 0 space are avaliable') 
      THEN('The full method reports that the OrderedMap is completely full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The erase method reports ok status for 7th (capacity-3) key ') 
      THEN('The has method returns true for 0-10 keys') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [11]to[1000] keys')
      THEN('The has method returns false for 13th(capacity+2) key')  
      THEN('After input method, items method returns expected 11 sequence of data') 

    WHEN('The input method is called on erased 6th and 7th item ') 
      THEN('The input method returns ok status for 6th item') 
      THEN('The input method returns ok status for 7th item') 
      THEN('The max_size method reports, OrderedMap has capacity 11') 
      THEN('After the input, the size method reports size as 8 ')  
      THEN('The avaliable method reports that 3 spaces are avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The has method returns true for 0-7 keys') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [8]to[1000] keys')
      THEN('After input method, items method returns expected 8 sequence of data') 

  GIVEN('An empty OrderedMap with capacity 4') 
    WHEN('The input method is called on 1st,2nd and 3rd key with -10, -100 and -9658 as values respectively') 
      THEN('The input method returns ok status for 1st item') 
      THEN('The items method returns expected value for 1st key') 
      THEN('The input method returns ok status for 2nd item') 
      THEN('The items method returns expected value for 2nd key') 
      THEN('The input method returns ok status for 3rd item') 
      THEN('The items method returns expected value for 3rd key') 
      THEN('The max_size method reports, OrderedMap has capacity 4') 
      THEN('After the input method, the size method reports size as 3 ') 
      THEN('The avaliable method reports that 1 space is avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The has method returns true for 1,2 and 3 keys') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [4]to[1000] keys')

    WHEN('The input method is called on 1, 2 and 3 key for 2147483647, -2147483647 and -32768 as values') 
      THEN('The items method returns expected value for 1st key') 
      THEN('The input method returns ok status for 1st item') 
      THEN('The items method returns expected value for 2nd key') 
      THEN('The input method returns ok status for 2nd item') 
      THEN('The items method returns expected value for 3rd key') 
      THEN('The input method returns ok status for 3rd item') 
      THEN('The max_size method reports, OrderedMap has capacity 4') 
      THEN('After the input, the size method reports size as 3 ')  
      THEN('The avaliable method reports that 1 space is avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The has method returns true for 3 keys') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [4]to[1000] keys')

Scenario: The input method in OrderedMap works correctly for struct and pointers 
  GIVEN('An empty OrderedMap with capacity 4') 
    WHEN('The input method is called, where items are {1,121}{2,2}{3,898}')
      THEN('The items method returns expected value for 1st key') 
      THEN('The input method returns ok status for 1st item') 
      THEN('The items method returns expected value for second key') 
      THEN('The input method returns ok status for 2nd item') 
      THEN('The items method returns expected value for 3rd key') 
      THEN('The input method returns ok status for 3rd item') 
      THEN('The max_size method reports, OrderedMap has capacity 4') 
      THEN('After the input, the size method reports size as 3')  
      THEN('The avaliable method reports that 1 space is avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The has method returns true for 1, 2 and 3 keys') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [4]to[1000] keys')
      THEN("Changing the value of struct elements does not change values of key 1,2 and 3")

  GIVEN('An empty OrderedMap with capacity 4') 
    WHEN('The input method is called, where values are pointers {1,10}{2,56}{3,28}') 
      THEN('The items method returns expected value for first key') 
      THEN('The input method returns ok status for first item') 
      THEN('The items method returns expected value for second key') 
      THEN('The input method returns ok status for second item') 
      THEN('The items method returns expected value for third key') 
      THEN('The input method returns ok status for third item') 
      THEN('The max_size method reports, OrderedMap has capacity 4') 
      THEN('After the input, the size method reports size as 3 ') 
      THEN('The avaliable method reports that 1 space is avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The has method returns true for 1,2 and 3 keys') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [4]to[1000] keys')

Scenario: The method output in OrderedMap works corretly 
  GIVEN('An OrderedMap with capacity 12 has {0,0}{1,1}{2,2}{3,3}{4,4}{5,5}{6,6}{7,7}{8,8} items') 
    WHEN('The output method is used on 1st and 8th item') 
      THEN('The output method returns ok status for 1st item') 
      THEN('After the output method, it returns expected value for 1st key')  
      THEN('The output method returns ok status for 8th item') 
      THEN('After the output method, it returns expected value for 8th key')  
      THEN('The max_size method reports, OrderedMap has capacity 12') 
      THEN('After the input, the size method reports size as 9')  
      THEN('The avaliable method reports that 3 spaces are avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The erase method reports ok status for 8th key ') 
      THEN('The has method returns true for 0-8 keys') 
      THEN('The has method returns false for 11th(capacity-1) and 12th(capacity) keys') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [9]to[1000] keys')
      THEN('After the output method, items method returns expected 9 sequence of data') 

    WHEN('The output method is used on 11th(capacity) and 12th(capacity+1) key') 
      THEN('The output method returns out of bounds status for 11th(capacity) and 12th(capacity+1) items') 
      THEN('The max_size method reports, OrderedMap has capacity 12') 
      THEN('After the input, the size method reports size as 9 ')  
      THEN('The avaliable method reports that 3 spaces are avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The erase method reports ok status for 8th key ') 
      THEN('The has method returns true for 0-8 keys') 
      THEN('The has method returns false for 11th(capacity) and 12th(capacity+1) keys') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [9]to[1000] keys')
      THEN('After the output method, items method returns expected 9 sequence of data') 

    WHEN('The output method is used on erased 7th and 8th items') 
      THEN('After erase method, the output method gives out of bounds status for 8th item') 
      THEN('After erase method, the output method gives out of bounds status for 9th item') 
      THEN('The max_size method reports, OrderedMap has capacity 12') 
      THEN('After the output method, the size method reports size as 7 ') 
      THEN('The avaliable method reports that 5 spaces are avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The erase method reports ok status for 2nd key ') 
      THEN('The has method returns true for 0-5 keys') 
      THEN('The has method returns false for 7th and 8th keys ') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [6]to[1000] keys')
      THEN('After the output method, items method returns expected 7 sequence of data') 

Scenario: The method erase in OrderedMap works corretly
  GIVEN('Partially filled OrderedMap with capacity 12 and has {0,0}{1,1}{2,2}{3,3}{4,4}{5,5}{6,6}{7,7}{8,8} items') 
    WHEN('The method erase is called on 0,1,2 and 3rd keys') 
      THEN('The erase method returns ok status for 0,1,2 and 3 keys') 
      THEN('The max_size method reports, OrderedMap has capacity 12') 
      THEN('After the input, the size method reports size as 5 ')  
      THEN('The avaliable method reports that 7 spaces are avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The has method returns true for 4,5,6,7 and 8 keys') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [9]to[1000] keys')
      THEN('After the output methos, items method returns expected 5 sequnce of data') 

    WHEN('The erase method is called on 11th(capacity) and 12th(capacity+1) items') 
      THEN('The erase method returns out of bounds status for 11th(capacity) and 12th(capacity+1) items') 
      THEN('The max_size method reports, OrderedMap has capacity 12') 
      THEN('After the input, the size method reports size as 9 ')  
      THEN('The avaliable method reports that 3 spaces are avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The has method returns true for 0-8 keys') 
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [9]to[1000] keys')
      THEN('After the output methos, items method returns expected 9 sequnce of data') 

    WHEN('The erase method is called on 7,8 and 10th item') 
      THEN('The erase method returns ok status for 7th item') 
      THEN('The erase method returns ok status for 8th item') 
      THEN('The erase method returns out of bounds status for 10th item') 
      THEN('The max_size method reports, OrderedMap has capacity 12') 
      THEN('After the input, the size method reports size as 7') 
      THEN('The avaliable method reports that 5 spaces are avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is non-empty') 
      THEN('The has method returns true for 0-4 keys ') 
      THEN('The has method returns false for 7-9 keys')
      THEN('The has method returns false for [-1000]to[0] keys')
      THEN('The has method returns false for [5]to[1000] keys')
      THEN('After the output method, items method return expected 7 sequnce of data') 

Scenario: The method clear in OrderedMap works corretly 
  GIVEN('An partially filled OrderedMap with capacity 12 {1,1}{2,2}{3,3}{4,4}{5,5}{6,6}{7,7}{8,8}{9,9}{10,10}') 
    WHEN('The clear method is called') 
      THEN('The has method returns false for 10 keys') 
      THEN('The has method returns false for [-1000]to[1000] keys')
      THEN('The max_size method reports, OrderedMap has capacity 12') 
      THEN('The avaliable method reports that 12 spaces are avaliable') 
      THEN('The full method reports that the OrderedMap is not full') 
      THEN('The empty method reports that the OrderedMap is empty') 
