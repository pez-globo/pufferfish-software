Scenario:The function in Vector: push_back works correctly
  GIVEN('Vector with partially filled buffer with capacity 254') 
    WHEN('The push_back method is called on 253 byte and 254th byte') 
      THEN('The push_back method returns ok status for index 252') 
      THEN('The push_back method returns ok status for index 253') 
      THEN('After the push_back, The size method reports size as 254') 
      THEN('The avaliable method reports that 0 bytes are avaliable') 
      THEN('The full method reports that the vector is completely filled') 
      THEN('The empty method reports that the vector is non-empty') 
      THEN('The vector has an expected sequence of 253 bytes initially pushed and 253 at the end') 

    WHEN('The push_back method is called for 254th byte and 252 bytes vector are passed as input') 
      THEN('The push_back method returns ok status for index 254') 
      THEN('The push_back method returns out of bounds status for index 255') 
      THEN('After the push_back method is called, The size method reports size as 254') 
      THEN('The avaliable method reports that 0 bytes are avaliable') 
      THEN('The full method reports that the vector is completely filled') 
      THEN('The erase method reports ok status on input of 2nd index ') 
      THEN('The erase method reports out of bounds status on input of 2nd index') 
      THEN('The empty method reports that the vector is non-empty') 
      THEN('The vector has an expected sequence of 253 bytes initially pushed and 253 at the end') 

  GIVEN('Completely filled vector with buffer size 254') 

    WHEN('The push_back method is called for 255th byte, vector of 254 size is passed as input') 
      THEN('The push_back method reports out of bounds status for 255th byte') 
      THEN('After the push_back method is called, The size method reports size as 254') 
      THEN('The avaliable method reports that 0 bytes are avaliable') 
      THEN('The full method reports that the vector is completely filled') 
      THEN('The erase method reports ok status on input of 2nd index ') 
      THEN('The erase method reports out of bounds status on input of 260 index ') 
      THEN('The empty method reports that the vector is non-empty') 
      THEN('After push_back method is called on input of 254 bytes, it returns expected data at every index ') 
 
  GIVEN('Empty vector with capacity 254') 
    WHEN('The push back method is used on empty vector') 
      THEN('The push_back method returns ok status for 201 th index') 
      THEN('After the push_back, The size method reports size as 201') 
      THEN('The avaliable method reports that 52 bytes are avaliable') 
      THEN('The full method reports that the vector is not-completely filled') 
      THEN('The erase method reports ok status on input of 2nd index') 
      THEN('The erase method reports out of bound status on input of 258 index ') 
      THEN('The empty method reports that the vector is non-empty') 
      THEN('After push_back method is called on input vector of size 254, it returns expected data at every index ') 

Scenario: The function resize in  Vectors work correctly 
  GIVEN('A uint8_t vector constructed with array size of 256 bytes is partially filled with 10 bytes of data ') 
    WHEN('Resize method is called on input buffer of new size 260') 
      THEN('The resize method reports out_of_bounds status') 
      THEN('After the resize method is called, the size method reports size as 10') 
      THEN('The avaliable method reports that 246 bytes are avaliable') 
      THEN('The empty method reports that the vector is non-empty') 
      THEN('The full method reports that the vector is not completely filled') 
      THEN('The erase method reports ok status on input of 2nd index')
      THEN('The erase method reports ok status on input of 258th index')
      THEN('The vector has an expected sequence of 10 bytes') 
    WHEN('resize method is called on input vector of size 254 with a new size of 50 bytes') 
      THEN('The resize method reports ok status') 
      THEN('After the resize method is called, the size method reports size as 250') 
      THEN('The avaliable method reports that 6 bytes are avaliable') 
      THEN('The empty method reports that the vector is non-empty') 
      THEN('The full method reports that the vector is completely filled') 
      THEN('The erase method reports ok status on input of 2nd index')
      THEN('The erase method reports ok status on input of 258th index')
      THEN('The vector has an expected sequence of 10 bytes initially pushed') 

  GIVEN('A uint8_t vector constructed with an buffer size of 100 bytes is partially filled with 20 bytes of data') 
    WHEN('Vector is resized to new buffer size 50') 
      THEN('The resize method reports ok status ') 
      THEN('The avaliable method reports that 50 bytes are avaliable') 
      THEN('After the resize method is called, The size method reports size as 50') 
      THEN('The full method reports that the vector is not-completely filled') 
      THEN('The empty method reports that the vector is non-empty') 
      THEN('The erase method reports ok status on input of 2nd index')
      THEN('The erase method reports ok status on input of 258th index')
      THEN('The vector has an expected sequence of 20 bytes initially pushed') 

    WHEN('Vector is resized to 10UL buffer size')
      THEN('The resize method reports ok status ') 
      THEN('The avaliable method reports that 90 bytes are avaliable') 
      THEN('After the resize method is called, The size method reports size as 10') 
      THEN('The full method reports that the vector is not-completely filled') 
      THEN('The empty method reports that the vector is non-empty') 
      THEN('The erase method reports ok status on input of 2nd index')
      THEN('The erase method reports ok status on input of 258th index')

      THEN('The vector has an expected sequence of 10 bytes initially pushed')  
    
  
  
Scenario: The function in Vector: copy_from works correctly 
  GIVEN('Completely filled vector of buffer size 252') 
    WHEN('The copy_from method is called on input vector of size 252') 
      THEN('copy_from method returns ok') 
      THEN('The vector has an expected sequence of 252 bytes') 
      THEN('After the copy_from method is called, The size method reports size as 252') 
      THEN('The full method reports that the vector is completely filled') 
      THEN('The avaliable method reports that 0 bytes are avaliable') 
      THEN('Erase method returns ok status with the input of index 0') 
      THEN('Erase method returns ok status with the input of index 256') 
      THEN('The empty method reports that the vector is non-empty') 

    WHEN('The copy_from method is called on input vector of size 252 for dest index 3') 
      THEN(' copy_from method  returns out_of_bounds') 
      THEN('The empty method reports that the vector is empty')
      THEN('The full method reports that the vector is not-completely filled') 
      THEN('The avaliable method reports that 252 bytes are avaliable') 

    WHEN('The copy_from method is called on input vector of size 256 for dest index 2') 
      THEN('copy_from method returns out of bounds ') 
      THEN('The vector has an expected sequence of 256 bytes ') 
      THEN('After the copy_from method is called, The size method reports size as 102 ') 
      THEN('The avaliable method reports that 150 bytes are avaliable') 
      THEN('The full method reports that the vector is not completely filled') 
      THEN('The empty method reports that the vector is empty') 
    

    WHEN('uint16 vector is passed as input for copy_from function') 
      THEN('copy_from function returns ok') 
      THEN('The vector has an expected sequence of 4 bytes')  
      THEN('After the copy_from method is called, The size method reports size as 2') 
      THEN('The avaliable method reports that 0 bytes are avaliable') 
      THEN('The full method reports that the vector is completely filled') 
      THEN('The empty method reports that the vector is non-empty') 

    WHEN('The copy_from method is called on input vector of uint16 of 2UL size and dest index 3')
      THEN('copy_from function returns out_of_bounds') 
      THEN('The empty method reports that the vector is empty') 
      THEN('The avaliable method reports that 2 bytes are avaliable') 
      THEN('The full method reports that the vector is not completely filled') 


Scenario: The function in Vector:Element *buffer() works correctly
  GIVEN('Vector with partially filled with buffer size 100UL') 
    WHEN('Element *buffer() function is used on vector') 
      THEN('The vector has an expected sequence of 100 bytes') 
      THEN('After the Element *buffer() method is called, The size method reports size as 4') 
      THEN('The avaliable method reports that 96 bytes are avaliable') 
      THEN('The full method reports that the vector is not completely filled') 
      THEN('The empty method reports that the vector is non-empty') 

    WHEN('Vector is resized to 2, Element *buffer() gives correct values') 
      THEN('Return vector of size 2 as expected data') 
      THEN('After the Element *buffer() method is called, The size method reports size as 2') 
      THEN('The avaliable method reports that 98 bytes are avaliable') 
      THEN('The full method reports that the vector is not-completely filled') 
      THEN('The empty method reports that the vector is non-empty') 

Scenario:The method in vector: erase works correctly') 
  GIVEN('Completely filled vector of 252UL buffer size') 
    WHEN('the erase method is called with input of index 5, 10 and 256') 
      THEN('The erase method reports ok status.') 
      THEN('The erase method reports ok status with the input of index 10') 
      THEN('The erase method reports out of bounds status with the input of index 256') 
      THEN('After the erase method is called, The size method reports size as 251') 
      THEN('The avaliable method reports that 1 bytes are avaliable') 
      THEN('The full method reports that the vector is not-completely filled') 
      THEN('The empty method reports that the vector is non-empty') 

  GIVEN('Partially filled vector with 256UL buffer size') 
    WHEN('the erase method is called with input of index 251 and 260') 
      THEN('The erase method returns ok status with the input of index 251') 
      THEN('The erase method returns out of bounds status with the input of index 260') 
      THEN('After the erase method is called, The size method reports size as 251') 
      THEN('The avaliable method reports that 5 bytes are avaliable') 
      THEN('The full method reports that the vector is not-completely filled') 
      THEN('The empty method reports that the vector is not empty') 

  GIVEN('Empty vector of buffer size 252UL') 
    WHEN('Empty vector of size 252UL is passed as input for erase method') 
      THEN('After erase method, it returns out of bounds with the input of index 0') 
      THEN('The empty method reports that the vector is empty') 
      THEN('The avaliable method reports that 5 bytes are avaliable') 
      THEN('The full method reports that the vector is not-completely filled') 

  GIVEN('Vector of only one byte')
    WHEN('Vector containing only 1 byte is passed as an input for erase method')
      THEN('After erase method, it returns ok with the input of index 0')
      THEN('After erase method, it returns out of bounds with the input of index 1')
      THEN('The empty method reports that the vector is empty') 
      THEN('The avaliable method reports that 5 bytes are avaliable') 
      THEN('The full method reports that the vector is not-completely filled') 



Scenario: A vector method operator works correctly 
  GIVEN('A vector partially filled with 254UL size') 
    WHEN('Method operator is used on vector of 254Ul buffer size') 
      THEN('The vector has expected sequence of 200 bytes') 
      THEN('Operator method returns 0 with input at 220th index') 
      THEN('Operator method returns 0 with input at 252th index')

