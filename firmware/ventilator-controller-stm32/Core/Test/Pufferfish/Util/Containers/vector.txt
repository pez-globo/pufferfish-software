SCENARIO: The Util::Vector resize method correctly updates the internal size of the vector to the new size

  GIVEN("A uint8_t vector(ByteVector) constructed with array size of 256 bytes")

    WHEN("10 bytes are pushed after which resize method is called with a new size of 260")
      THEN("Before the resize method is called, The size method reports size as 10")
      THEN("The avaliable method reports that 246 bytes are avaliable")
      THEN("The empty method reports that the vector is non-empty")
      THEN("The full method reports that the vector is not completely filled")
      THEN("The resize method reports out_of_bounds status")
      THEN("After the resize method is called, the size method reports size as 10")
      THEN("The avaliable method reports that 246 bytes are avaliable")
      THEN("The empty method reports that the vector is non-empty")
      THEN("The full method reports that the vector is not completely filled")
      THEN("The vector has an expected sequence of 10 bytes")

    WHEN("20 bytes are pushed after which resize method is called with a new size of 256 bytes")
      THEN("Before the resize method is called, The size method reports size as 20")
      THEN("The avaliable method reports that 236 bytes are avaliable")
      THEN("The empty method reports that the vector is non-empty")
      THEN("The full method reports that the vector is not completely filled")
      THEN("The resize method reports ok status")
      THEN("After the resize method is called, the size method reports size as 256")
      THEN("The avaliable method reports that 0 bytes are avaliable")
      THEN("The empty method reports that the vector is non-empty")
      THEN("The full method reports that the vector is completely filled")
      THEN("The vector has an expected sequence of 20 bytes initially pushed, and 236 null bytes") 

      
SCENARIO('The function in Vector push_back works correctly') 
  GIVEN('Vector with an partially filled buffer with capacity 8') 
    WHEN('partially filled vector with buffer size 8 is passed as input for adding data at index 6 ') 
      THEN('After push_back returns expected data of size 8 at every index') 
      THEN('After the push_back method is called, The size method reports size as 8') 
      THEN('The avaliable method reports that 0 bytes are avaliable') 
      THEN('The full method reports that the vector is completely filled') 
      THEN('The empty method reports that the vector is non-empty') 

  GIVEN('Partially filled vector with capacity 5') 
    WHEN('partially filled vector with buffer size 5 is passed as input for adding data at index 5 and 7') 
      THEN('Returns ok for push_back function at index 5') 
      THEN('Returns out of bounds for push_back function at index 7') 
      THEN('Returned data of size 5 is as expected at every index') 
      THEN('After the push_back method is called, The size method reports size as 5') 
      THEN('The avaliable method reports that 0 bytes are avaliable') 
      THEN('The full method reports that the vector is completely filled') 
      THEN('After erase method is called at index 5, it returns ok ')
      THEN('After erase method is called at index 10, it returns out of bounds') 
      THEN('The empty method reports that the vector is non-empty') 
  
  GIVEN('Completely filled vector with  size of 4') 
    WHEN('One byte is pushed to 5th index of vector size 4') 
      THEN('push_back returns out of bounds, vector is completly filled') 
      THEN('Returned data of size 5 is as expected at every index ') 
      THEN('After the push_back method is called, The size method reports size as 4') 
      THEN('The avaliable method reports that 0 bytes are avaliable') 
      THEN('The full method reports that the vector is completely filled') 
      THEN('After erase method is called at index 2, it returns ok') 
      THEN('After erase method is called at index , it returns out of bounds') 
      THEN('The empty method reports that the vector is non-empty') 

SCENARIO(' The function resize in  Vectors work correctly') 
  GIVEN('Partially filled Vector  with 256 buffer size') 
    WHEN('Partially filled vector is resized to 5 buffer size') 
      THEN('Vector is resized correctly to 5 ') 
      THEN('Returns correct data of 5 for every indices ') 
      THEN('The avaliable method reports that 95 bytes are avaliable') 
      THEN('After the resize method is called, The size method reports size as 5') 
      THEN('The full method reports that the vector is not-completely filled') 
      THEN('After erase method is called at index 0, it returns ok') 
      THEN('After erase method is called at index 5, it returns out of bounds') 
      THEN('The empty method reports that the vector is non-empty') 
    

    WHEN('A partially filled vector is passed to resize for 400 new buffer size ') 
      THEN('Returns  out of bounds') 
      THEN('After the resize , returned vector of size 7 is as expected at every index') 
      THEN('After the resize method is called, The size method reports size as 7') 
      THEN('The avaliable method reports that 93 bytes are avaliable') 
      THEN('The full method reports that the vector is not completely filled') 
      THEN('After erase method is called at index 4, it returns ok') 
      THEN('After erase method is called at index 22, it returns out of bounds') 
      THEN('The empty method reports that the vector is non-empty') 

    WHEN('Partially filled vector is passed as input for resize function longer than original size') 
      THEN('For resize function it returns ok ') 
      THEN('The avaliable method reports that 75 bytes are avaliable') 
      THEN('After the resize method is called, The size method reports size as 25') 
      THEN('The full method reports that the vector is not completely filled') 
      THEN('Returned vector of size 7 has correct data in every index') 

      THEN('After erase method is called at index 1, it returns ok') 
      THEN('After erase method is called at index 20, it returns out of bounds') 
      THEN('The empty method reports that the vector is non-empty') 


SCENARIO('The function in Vector: copy_from works correctly on vector') 
  GIVEN('Vector with completely filled buffer with 4UL capacity') 
    WHEN('Vector of 4UL is passed as input and for copy_from function') 
      THEN('After copy_from method is called ,copy_from method returns ok') 
      THEN('Returns correct values of vector of size 4 at every index ') 
      THEN('After the copy_from method is called, The size method reports size as 4') 
      THEN('The avaliable method reports that 0 bytes are avaliable') 
      THEN('The full method reports that the vector is completely filled') 
      THEN('The empty method reports that the vector is non-empty') 
    

    WHEN('Vector of 6UL is passed as input and output is called for dest index 3') 
      THEN('After copy_from method is called ,copy_from method returns ok ') 
      THEN('Returns correct values of vector 6 at every index') 
      THEN('After the copy_from method is called, The size method reports size as 6') 
      THEN('The avaliable method reports that 0 bytes are avaliable') 
      THEN('After erase method is called at index 9, it returns out of bounds') 
      THEN('After erase method is called at index 2, it returns ok') 
      THEN('The empty method reports that the vector is non-empty') 

    WHEN('Vector of 4UL is passed as input for  copy_from function at dest_start_index 5') 
      THEN('After copy_from method is used, it returns out of bounds') 
      THEN('The full method reports that the vector is not completely filled') 
      THEN('The avaliable method reports that 4 bytes are avaliable') 
      THEN('The empty method reports that the vector is empty') 
    

    WHEN('Vector of 4UL is passed as input for copy_from function, output is 4UL vector') 
      THEN('After copy_from method is used, it returns out of bounds') 
      THEN('Returns correct data for vector of size 4 at every index') 
      THEN('After the copy_from method is called, The size method reports size as 4') 
      THEN('The avaliable method reports that 0 bytes are avaliable') 
      THEN('The full method reports that the vector is completely filled') 
      THEN('The empty method reports that the vector is empty') 

  GIVEN(' uint16 Vector with completely filled buffer with 1UL capacity') 
    WHEN('uint16 vector is passed as an input for copy_from method') 
      THEN('After copy_from method is called, it returns ok') 
      THEN('Returns correct data') 
      THEN('After the copy_from method is called, The size method reports size as 1') 
      THEN('The avaliable method reports that 1 bytes are avaliable') 
      THEN('The full method reports that the vector is not completely filled') 
      THEN('The empty method reports that the vector is non-empty') 
    
  


SCENARIO('Copy_from function for array works correctly') 
  GIVEN('Vector with completely filled buffer with 4UL capacity') 
    WHEN('An array of 2UL size is passed as input for copy_from function ') 
      THEN('After copy_from method is called, it returns ok') 
      THEN('Returns correct value of vector 2 at every index') 
      THEN('After the copy_from method is called, The size method reports size as 2') 
      THEN('The avaliable method reports that 2 bytes are avaliable') 
      THEN('The full method reports that the vector is not completely filled') 
      THEN('Retuns ok for erase at index 2') 
      THEN('retuns out of bounds for erase used on out of bound index') 
    WHEN('An array of 2UL size is passed as input to copy_from function for dest index 1') 
      THEN('After copy_from method is called, it returns ok') 
      THEN('Returns correct value for every index of size 2') 
      THEN('After the copy_from method is called, The size method reports size as 3') 
      THEN('The full method reports that the vector is not completely filled') 
      THEN('The avaliable method reports that 1 bytes are avaliable') 
      THEN('The empty method reports that the vector is non-empty') 

    WHEN('An array of 2UL size is passed as input to copy_from function for dest index 6') 
      THEN('After copy_from function is used for dest index 6, it returns  out of bounds') 
      THEN('After the copy_from method is called, The size method reports size as 0') 
      THEN('The full method reports that the vector is not-completely filled') 
      THEN('The avaliable method reports that 4 bytes are avaliable') 
      THEN('The empty method reports that the vector is empty') 
    

    WHEN('Vector of uint16 is passed as input for copy_from function') 
      THEN('After copy_from method is called, it returns ok') 
      THEN('Returns correct value for size 2') 
      THEN('After the copy_from method is called, The size method reports size as 1') 
      THEN('The avaliable method reports that 3 bytes are avaliable') 
      THEN('The full method reports that the vector is not-completely filled') 
      THEN('The empty method reports that the vector is non-empty') 

SCENARIO('The function in Vector: copy_from works correctly') 
  GIVEN('Vector with completely filled buffer with 4UL capacity') 
    WHEN('Vector of 2UL is passed as input for copy_from function') 
      THEN('After copy_from method is called, it returns ok') 
      THEN('Returns correct data for every index for size 2') 
      THEN('After the copy_from method is called, The size method reports size as 2') 
      THEN('The full method reports that the vector is completely filled') 
      THEN('The avaliable method reports that 0 bytes are avaliable') 
      THEN('After erase method is called at index 0, it returns ok') 
      THEN('After erase method is called at index 5, it returns out of bounds') 
      THEN('The empty method reports that the vector is non-empty') 

    WHEN('Vector of 10UL is passed as input for copy_from function for dest index 3') 
      THEN('After copy_from method is called, it returns ok') 
      THEN('Returns correct data for every index of size 5') 
      THEN('After the copy_from method is called, The size method reports size as 5') 
      THEN('The full method reports that the vector is completely filled') 
      THEN('The avaliable method reports that 0 bytes are avaliable') 
      THEN('After erase method is called at index 3, it returns ok') 
      THEN('After erase method is called at index 5, it returns out of bounds') 
      THEN('The empty method reports that the vector is non-empty') 

    WHEN('Vector of 2UL is passed as input and output is called for dest index 3') 
      THEN('After copy_from method is used for dest_index 3,it returns out of bounds ') 
      THEN('After the copy_from method is called, The size method reports size as 0') 
      THEN('The avaliable method reports that 2 bytes are avaliable') 
      THEN('The full method reports that the vector is not completely filled') 
      THEN('The empty method reports that the vector is empty') 
    

    WHEN('uint16 vector is passed as input for copy_from function') 
      THEN('After copy_from function , it returns ok') 
      THEN('Returns correct data of uint16') 
      THEN('After the copy_from method is called, The size method reports size as 1') 
      THEN('The avaliable method reports that 0 bytes are avaliable') 
      THEN('The full method reports that the vector is completely filled') 
      THEN('The empty method reports that the vector is non-empty') 

SCENARIO('The function in Vector:Element *buffer() works correctly') 
  GIVEN('Vector with partially filled with buffer size 100UL') 
    WHEN('Element *buffer() function is used on vector') 
      THEN('Returned vector is as expected at every index of size 4') 
      THEN('After the Element *buffer() method is called, The size method reports size as 4') 
      THEN('The avaliable method reports that 96 bytes are avaliable') 
      THEN('The full method reports that the vector is not-completely filled') 
      THEN('The empty method reports that the vector is non-empty') 

    WHEN('Vector is resized to 2, Element *buffer() gives correct values') 
      THEN('Return vector of size 2 as expected data') 
      THEN('After the Element *buffer() method is called, The size method reports size as 2') 
      THEN('The avaliable method reports that 98 bytes are avaliable') 
      THEN('The full method reports that the vector is not-completely filled') 
      THEN('The empty method reports that the vector is non-empty') 

SCENARIO('The function in vector: erase works correctly') 
  GIVEN('Completely filled vector with 2UL buffer size') 
    WHEN('completelty filled vector with 2UL size is passed as input for erase function') 
      THEN('After erase method, it returns ok for index 0') 
      THEN('After erase method, it returns ok index 1') 
      THEN('After erase method, it returns out of bounds for index 3') 
      THEN('After the erase method is called, The size method reports size as 1') 
      THEN('The avaliable method reports that 1 bytes are avaliable') 
      THEN('The full method reports that the vector is not-completely filled') 
      THEN('The empty method reports that the vector is non-empty') 

  GIVEN('Completely filled vector with 1UL buffer size') 
    WHEN('completelty filled vector with 1UL size is passed as input for erase function') 
      THEN('After erase method, it returns ok for index 0') 
      THEN('After erase method, it returns out of bounds for index 1') 
      THEN('After the erase method is called, The size method reports size as 0')
      THEN('The avaliable method reports that 1 bytes are avaliable') 
      THEN('The full method reports that the vector is not-completely filled') 
      THEN('The empty method reports that the vector is empty') 
  


  GIVEN('Empty vector of buffer size 5UL') 
    WHEN('Empty vector of size 5UL is passed as input for erase function') 
      THEN('After erase method, it returns out of bounds for index 0') 
      THEN('After the erase method is called, The size method reports size as 0') 
      THEN('The avaliable method reports that 5 bytes are avaliable') 
      THEN('The full method reports that the vector is not-completely filled') 
      THEN('The empty method reports that the vector is empty') 

SCENARIO('A vector function operator works correctly') 
  GIVEN('A vector partially filled with 20UL size') 
    WHEN('Function operator is used on 20UL size vector') 
      THEN('Returns correct values for operator function for size of 10 ') 
      THEN('After operator method, it returns 0 for 15th and 20th index') 
