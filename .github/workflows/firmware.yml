name: Firmware Checks

on:
  push:
    paths:
      - 'firmware/**'

defaults:
  run:
    working-directory: firmware/ventilator-controller-stm32

jobs:
  format:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v1

    - name: Install dependencies
      run: |
        sudo apt-get install clang-format

    - name: Run clang-format
      run: |
        ! ./clang-format-all.sh -dry-run 2>&1 | grep ''

  cppcheck:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v1

    - name: Install dependencies
      run: |
        sudo apt-get install cppcheck

    - name: Run cppcheck with application
      run: |
        mkdir application-cppcheck-build-dir
        cppcheck --project=application.cppcheck --inline-suppr --enable=all --error-exitcode=1

  build-application:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        build-type: [Debug, Release]

    steps:
    - uses: actions/checkout@v1

    - name: Install dependencies
      run: |
        sudo apt-get install gcc-arm-none-eabi cmake

    - name: Run CMake build
      run: |
        ./cmake.sh ${{ matrix.build-type }}
        cd cmake-build-`echo ${{ matrix.build-type }} | awk '{print tolower($0)}'`
        make -j2

  scan-build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v1

    - name: Install dependencies
      run: |
        sudo apt-get install gcc-arm-none-eabi cmake clang-tools

    - name: Run CMake build
      run: |
        ./cmake.sh Debug
        cd cmake-build-debug
        scan-build make -j2

  clang-tidy:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v1

    - name: Install dependencies
      run: |
        sudo apt-get install gcc-arm-none-eabi cmake clang-tidy

    - name: Run CMake build
      run: |
        ./cmake.sh Debug
        ./clang-tidy-all.sh
