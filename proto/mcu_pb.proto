syntax = "proto3";

message Range {
  uint32 lower = 1;
  uint32 upper = 2;
}

message AlarmLimits {
  uint32 time = 1;
  Range fio2 = 2;
  Range spo2 = 3;
  Range rr = 4;
  Range pip = 5;
  Range peep = 6;
  Range ip_above_peep = 7;
  Range insp_time = 8;
  Range paw = 9;
  Range mve = 10;
  Range tv = 11;
  Range etco2 = 12;
  Range flow = 13;
  Range apnea = 14;
  Range hr = 15;
}

message AlarmLimitsRequest {
  uint32 time = 1;
  Range fio2 = 2;
  Range spo2 = 3;
  Range rr = 4;
  Range pip = 5;
  Range peep = 6;
  Range ip_above_peep = 7;
  Range insp_time = 8;
  Range paw = 9;
  Range mve = 10;
  Range tv = 11;
  Range etco2 = 12;
  Range flow = 13;
  Range apnea = 14;
  Range hr = 15;
}

message SensorMeasurements {
  uint32 time = 1;
  uint32 cycle = 2;
  float paw = 3;
  float flow = 4;
  float volume = 5;
  float fio2 = 6;
  float spo2 = 7;
  float hr = 8;
}

message CycleMeasurements {
  uint32 time = 1;
  float vt = 2;
  float rr = 3;
  float peep = 4;
  float pip = 5;
  float ip = 6;
  float ve = 7;
}

enum VentilationMode {
  hfnc = 0;
  pc_ac = 1;
  vc_ac = 2;
  niv_pc = 3;
  niv_ps = 4;
  psv = 5;
}

message Parameters {
  uint32 time = 1;
  VentilationMode mode = 2;
  float pip = 3;
  float peep = 4;
  float vt = 5;
  float rr = 6;
  float ie = 7;
  float fio2 = 8;
  float flow = 9;
  bool ventilating = 10;
}

message ParametersRequest {
  uint32 time = 1;
  VentilationMode mode = 2;
  float pip = 3;
  float peep = 4;
  float vt = 5;
  float rr = 6;
  float ie = 7;
  float fio2 = 8;
  float flow = 9;
  bool ventilating = 10;
}

// Testing messages

message Ping {
  uint32 time = 1;
  uint32 id = 2;
}

message Announcement {
  uint32 time = 1;
  bytes announcement = 2;
}

// Log Events
enum LogEventCode {
  // Patient
  fio2_too_low = 0;
  fio2_too_high = 1;
  spo2_too_low = 2;
  spo2_too_high = 3;
  rr_too_low = 4;
  rr_too_high = 5;
  hr_too_low = 6;
  hr_too_high = 7;
  // System
  battery_low = 8;
  screen_locked = 9;
  // Control
  ventilation_operation_changed = 10;
  ventilation_mode_changed = 11;
  fio2_setting_changed = 12;
  flow_setting_changed = 13;
}

enum LogEventType {
  patient = 0;
  system = 1;
  control = 2;
}

message LogEvent {
  uint32 id = 1;
  uint32 time = 2;
  LogEventCode code = 3;
  LogEventType type = 4;
  Range alarm_limits = 5;
  float old_float = 6;
  float new_float = 7;
  uint32 old_uint32 = 8;
  uint32 new_uint32 = 9;
  bool old_bool = 10;
  bool new_bool = 11;
  Range old_range = 12;
  Range new_range = 13;
  VentilationMode old_mode = 14;
  VentilationMode new_mode = 15;
}

message ExpectedLogEvent {
  uint32 id = 1;
}

message NextLogEvents {
  uint32 next_expected = 1;
  uint32 total = 2;
  uint32 remaining = 3;
  repeated LogEvent elements = 4;
}

message ActiveLogEvents {
  repeated uint32 id = 1;
}

// Power Management

message BatteryPower {
  uint32 power_left = 1;
  bool charging_status = 2;
}

// Hardware Buttons

message ScreenStatus {
  bool lock = 1;
}

message AlarmMute {
  bool active = 1;
  float remaining = 2;
}

message AlarmMuteRequest {
  bool active = 1;
  float remaining = 2;
}
