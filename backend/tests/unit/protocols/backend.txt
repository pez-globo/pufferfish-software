Scenario: Backend receive event behaves properly
Given: A ReceiveEvent object
When: the object is initialised without data
Then: has_data function returns false   

Scenario: Backend receive event behaves properly
Given: A ReceiveEvent object
When: time is given as input
Then: has_data function returns true

Scenario: Backend receive event behaves properly
Given: A ReceiveEvent object
When: mcu event is given as input
Then: has_data function returns true

Scenario: Backend receive event behaves properly
Given: A ReceiveEvent object
When: frontend data is given as input
Then: has_data function returns true

Scenario: The backend's output event behaves properly
Given: A OutputEvent object
When: ouptut event has no data
Then: has_data function returns false

Scenario: The backend receiver's input event behaves properly
Given: A OutputEvent object
When: output event has data
Then: has_data function returns true

Scenario: The backend's output event behaves properly
Given: a announcement object
When: backend recieves announcement strings as input
Then: has_data function returns true

#ReceiveFilter

Scenario: Receive Filter behaves properly
Given: a `ReceiveFilter` object which has not yet received any events
When: a receive event with no data is passed as input to the receive filter
Then: the output of the receive filter is None

Scenario: Receive Filter behaves properly
Given: mcu receive event
When: mcu receive event is passed as input to receive filter
Then: output of receive filter is not None

Scenario: Receive Filter behaves properly
Given: frontend receive event
When: frontend receive event is passed as input to receive filter
Then: output of receive filter is not None

Scenario: Receive Filter behaves properly
Given: file object receive event
When: file receive event is passed as input to receive filter
Then: output of receive filter is not None


#SendFilter

Scenario : Send Filter behaves properly
Given: An Event of type SendEvent with no data
When: empty send event is passed as input to send filter
Then: output of send filter is None

Scenario : Send Filter behaves properly
Given: An event of type announcement
When: announcement event is passed as input to send filter
Then: output of send filter is not None

Scenario : Send Filter behaves properly
Given: An Event of type SendEvent with data
When: Given event is passed as input to send filter
Then: output of send filter is not None

#Protocols

Scenario: get_mcu_send function behaves properly
Given: The get_file_send function
When: OutputEvent object containing data in mcu_send field is passed to the function
Then: output of the function is not None 

Scenario: get_frontend_send function behaves properly
Given: The get_frontend_send function
When: OutputEvent object containing data in frontend_send field is passed to the function
Then: output of the function is not None 

Scenario: get_file_send function behaves properly
Given: The get_file_send function
When: OutputEvent object containing data in file_send field is passed to the function
Then: output of the function is not None 